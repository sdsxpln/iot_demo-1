C51 COMPILER V9.00   MCP2515                                                               05/22/2017 17:26:20 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MCP2515
OBJECT MODULE PLACED IN .\Output\MCP2515.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE BSP\MCP2515\MCP2515.c LARGE BROWSE INCDIR(.\BSP\Delay;.\BSP\UART;.\BSP\MCP2
                    -515) DEBUG OBJECTEXTEND PRINT(.\Listing\MCP2515.lst) OBJECT(.\Output\MCP2515.obj)

line level    source

   1          /**********************************************************************************
   2           * 文件名  ：MCP2515.c
   3           * 描述    ：MCP2515驱动函数库         
   4           * 实验平台：NiRen_STC/IAP15核心板(或用户STC15单片机开发板) + NiRen_MCP2515 CAN模块    
   5          **********************************************************************************/
   6          
   7          #include <reg51.h>
   8          #include "MCP2515.H"
   9          #include <intrins.h>
  10          
  11          //MCP2515引脚定义
  12          sbit MCP2515_SCK  = P2^3;//SPI时钟引脚 
  13          sbit MCP2515_MOSI = P2^2;//SPI主机输出从机输入引脚 
  14          sbit MCP2515_MISO = P2^1;//SPI主机输入从机输出引脚 
  15          sbit MCP2515_CS   = P2^0;//SPI片选引脚 
  16          
  17          //MCP2515波特率预分频
  18          #define CAN_10Kbps      0x31
  19          #define CAN_25Kbps      0x13
  20          #define CAN_50Kbps      0x09
  21          #define CAN_100Kbps     0x04
  22          #define CAN_125Kbps     0x03
  23          #define CAN_250Kbps     0x01
  24          #define CAN_500Kbps     0x00
  25          
  26          /*******************************************************************************
  27          * 函数名  : Delay_Nms
  28          * 描述    : 通过软件延时约nms(不准确)
  29          * 输入    : 无
  30          * 输出    : 无
  31          * 返回值  : 无
  32          * 说明    : 此方式延时时间是不准确的,准确延时建议用定时器
  33          *******************************************************************************/
  34          void Delay_Nms(unsigned int x)
  35          {
  36   1              unsigned int y;
  37   1      
  38   1              for (;x>0;x--)
  39   1                      for (y=0;y<100;y++);
  40   1      }
  41          
  42          /*******************************************************************************
  43          * 函数名  : SPI_ReadByte
  44          * 描述    : 通过SPI读取一个字节数据
  45          * 输入    : 无
  46          * 输出    : 无
  47          * 返回值  : rByte(读取到的一个字节数据)
  48          * 说明    : 无
  49          *******************************************************************************/
  50          unsigned char SPI_ReadByte(void)
  51          {
  52   1              unsigned char i,rByte=0;
  53   1              
  54   1              MCP2515_SCK=0;
C51 COMPILER V9.00   MCP2515                                                               05/22/2017 17:26:20 PAGE 2   

  55   1              for(i=0;i<8;i++)
  56   1              {
  57   2                      MCP2515_SCK=1;
  58   2                      rByte<<=1;
  59   2                      rByte|=MCP2515_MISO;
  60   2                      MCP2515_SCK=0;  
  61   2              }
  62   1              return rByte;
  63   1      }
  64          
  65          /*******************************************************************************
  66          * 函数名  : SPI_SendByte
  67          * 描述    : SPI发送一个字节数据
  68          * 输入    : dt:待发送的数据
  69          * 输出    : 无
  70          * 返回值  : 无
  71          * 说明    : 无
  72          *******************************************************************************/
  73          void SPI_SendByte(unsigned char dt)
  74          {
  75   1              unsigned char i;
  76   1                      
  77   1              for(i=0;i<8;i++)
  78   1              {       
  79   2                      MCP2515_SCK=0;
  80   2                      if((dt<<i)&0x80)
  81   2                              MCP2515_MOSI=1;
  82   2                      else
  83   2                              MCP2515_MOSI=0;                                 
  84   2                      MCP2515_SCK=1;
  85   2              }
  86   1              MCP2515_SCK=0;
  87   1      }
  88          
  89          /*******************************************************************************
  90          * 函数名  : MCP2515_WriteByte
  91          * 描述    : 通过SPI向MCP2515指定地址寄存器写1个字节数据
  92          * 输入    : addr:MCP2515寄存器地址,dat:待写入的数据
  93          * 输出    : 无
  94          * 返回值  : 无
  95          * 说明    : 无
  96          *******************************************************************************/
  97          void MCP2515_WriteByte(unsigned char addr,unsigned char dat)
  98          {
  99   1              MCP2515_CS=0;                           //置MCP2515的CS为低电平
 100   1              SPI_SendByte(CAN_WRITE);        //发送写命令
 101   1              SPI_SendByte(addr);                     //发送地址
 102   1              SPI_SendByte(dat);                      //写入数据
 103   1              MCP2515_CS=1;                           //置MCP2515的CS为高电平 
 104   1      }
 105          
 106          /*******************************************************************************
 107          * 函数名  : MCP2515_ReadByte
 108          * 描述    : 通过SPI从MCP2515指定地址寄器读1个字节数据
 109          * 输入    : addr:MCP2515寄存器地址
 110          * 输出    : 无
 111          * 返回值  : rByte:读取到寄存器的1个字节数据
 112          * 说明    : 无
 113          *******************************************************************************/
 114          unsigned char MCP2515_ReadByte(unsigned char addr)
 115          {
 116   1              unsigned char rByte;
C51 COMPILER V9.00   MCP2515                                                               05/22/2017 17:26:20 PAGE 3   

 117   1              
 118   1              MCP2515_CS=0;                           //置MCP2515的CS为低电平
 119   1              SPI_SendByte(CAN_READ);         //发送读命令
 120   1              SPI_SendByte(addr);                     //发送地址
 121   1              rByte=SPI_ReadByte();           //读取数据
 122   1              MCP2515_CS=1;                           //置MCP2515的CS为高电平
 123   1              return rByte;                           //返回读到的一个字节数据
 124   1      }
 125          
 126          /*******************************************************************************
 127          * 函数名  : MCP2515_Reset
 128          * 描述    : 发送复位指令软件复位MCP2515
 129          * 输入    : 无
 130          * 输出    : 无
 131          * 返回值  : 无
 132          * 说明    : 将内部寄存器复位为缺省状态,并将器件设定为配置模式
 133          *******************************************************************************/
 134          void MCP2515_Reset(void)
 135          {
 136   1              MCP2515_CS=0;                           //置MCP2515的CS为低电平
 137   1              SPI_SendByte(CAN_RESET);        //发送寄存器复位命令
 138   1              MCP2515_CS=1;                           //置MCP2515的CS为高电平
 139   1      }
 140          
 141          /*******************************************************************************
 142          * 函数名  : MCP2515_Init
 143          * 描述    : MCP2515初始化配置
 144          * 输入    : 无
 145          * 输出    : 无
 146          * 返回值  : 无
 147          * 说明    : 初始化包括：软件复位、工作波特率设置、标识符相关配置等。
 148          *******************************************************************************/
 149          void MCP2515_Init(void)
 150          {
 151   1              unsigned char temp=0;
 152   1      
 153   1              MCP2515_Reset();        //发送复位指令软件复位MCP2515
 154   1              Delay_Nms(1);           //通过软件延时约nms(不准确)
 155   1      
 156   1              //设置波特率为125Kbps
 157   1              //set CNF1,SJW=00,长度为1TQ,BRP=49,TQ=[2*(BRP+1)]/Fsoc=2*50/8M=12.5us
 158   1              MCP2515_WriteByte(CNF1,CAN_125Kbps);
 159   1              //set CNF2,SAM=0,在采样点对总线进行一次采样，PHSEG1=(2+1)TQ=3TQ,PRSEG=(0+1)TQ=1TQ
 160   1              MCP2515_WriteByte(CNF2,0x80|PHSEG1_3TQ|PRSEG_1TQ);
 161   1              //set CNF3,PHSEG2=(2+1)TQ=3TQ,同时当CANCTRL.CLKEN=1时设定CLKOUT引脚为时间输出使能位
 162   1              MCP2515_WriteByte(CNF3,PHSEG2_3TQ);
 163   1              
 164   1              MCP2515_WriteByte(TXB0SIDH,0xFF);//发送缓冲器0标准标识符高位
 165   1              MCP2515_WriteByte(TXB0SIDL,0xE0);//发送缓冲器0标准标识符低位
 166   1              
 167   1              MCP2515_WriteByte(RXB0SIDH,0x00);//清空接收缓冲器0的标准标识符高位
 168   1              MCP2515_WriteByte(RXB0SIDL,0x00);//清空接收缓冲器0的标准标识符低位
 169   1              MCP2515_WriteByte(RXB0CTRL,0x20);//仅仅接收标准标识符的有效信息
 170   1              MCP2515_WriteByte(RXB0DLC,DLC_8);//设置接收数据的长度为8个字节
 171   1              
 172   1              MCP2515_WriteByte(RXF0SIDH,0xFF);//配置验收滤波寄存器n标准标识符高位
 173   1              MCP2515_WriteByte(RXF0SIDL,0xE0);//配置验收滤波寄存器n标准标识符低位
 174   1              MCP2515_WriteByte(RXM0SIDH,0xFF);//配置验收屏蔽寄存器n标准标识符高位
 175   1              MCP2515_WriteByte(RXM0SIDL,0xE0);//配置验收屏蔽寄存器n标准标识符低位
 176   1              
 177   1              MCP2515_WriteByte(CANINTF,0x00);//清空CAN中断标志寄存器的所有位(必须由MCU清空)
 178   1              MCP2515_WriteByte(CANINTE,0x01);//配置CAN中断使能寄存器的接收缓冲器0满中断使能,其它位禁止中断
C51 COMPILER V9.00   MCP2515                                                               05/22/2017 17:26:20 PAGE 4   

 179   1              
 180   1              MCP2515_WriteByte(CANCTRL,REQOP_LOOPBACK|CLKOUT_ENABLED);//将MCP2515设置为环回模式,退出配置模式
 181   1              
 182   1              temp=MCP2515_ReadByte(CANSTAT);//读取CAN状态寄存器的值
 183   1              if(OPMODE_NORMAL!=(temp&&0xE0))//判断MCP2515是否已经进入环回模式
 184   1              {
 185   2                      MCP2515_WriteByte(CANCTRL,REQOP_LOOPBACK|CLKOUT_ENABLED);//再次将MCP2515设置为环回模式,退出配置模式
 186   2              }
 187   1      }
 188          
 189          /*******************************************************************************
 190          * 函数名  : CAN_Send_Buffer
 191          * 描述    : CAN发送指定长度的数据
 192          * 输入    : *CAN_TX_Buf(待发送数据缓冲区指针),len(待发送数据长度)
 193          * 输出    : 无
 194          * 返回值  : 无
 195          * 说明    : 无
 196          *******************************************************************************/
 197          void CAN_Send_Buffer(unsigned char *CAN_TX_Buf,unsigned char len)
 198          {
 199   1              unsigned char j,dly,count;
 200   1      
 201   1              count=0;
 202   1              while(count<len)
 203   1              {
 204   2                      dly=0;
 205   2                      while((MCP2515_ReadByte(TXB0CTRL)&0x08) && (dly<50))//快速读某些状态指令,等待TXREQ标志清零
 206   2                      {
 207   3                              Delay_Nms(1);//通过软件延时约nms(不准确)
 208   3                              dly++;
 209   3                      }
 210   2                                      
 211   2                      for(j=0;j<8;)
 212   2                      {
 213   3                              MCP2515_WriteByte(TXB0D0+j,CAN_TX_Buf[count++]);//将待发送的数据写入发送缓冲寄存器
 214   3                              j++;
 215   3                              if(count>=len) break;
 216   3                      }
 217   2                      MCP2515_WriteByte(TXB0DLC,j);//将本帧待发送的数据长度写入发送缓冲器0的发送长度寄存器
 218   2                      MCP2515_CS=0;
 219   2                      MCP2515_WriteByte(TXB0CTRL,0x08);//请求发送报文
 220   2                      MCP2515_CS=1;
 221   2              }
 222   1      }
 223          
 224          /*******************************************************************************
 225          * 函数名  : CAN_Receive_Buffer
 226          * 描述    : CAN接收一帧数据
 227          * 输入    : *CAN_TX_Buf(待接收数据缓冲区指针)
 228          * 输出    : 无
 229          * 返回值  : len(接收到数据的长度,0~8字节)
 230          * 说明    : 无
 231          *******************************************************************************/
 232          unsigned char CAN_Receive_Buffer(unsigned char *CAN_RX_Buf)
 233          {
 234   1              unsigned char i=0,len=0,temp=0;
 235   1      
 236   1              temp = MCP2515_ReadByte(CANINTF);
 237   1              if(temp & 0x01)
 238   1              {
 239   2                      len=MCP2515_ReadByte(RXB0DLC);//读取接收缓冲器0接收到的数据长度(0~8个字节)
 240   2                      while(i<len)
C51 COMPILER V9.00   MCP2515                                                               05/22/2017 17:26:20 PAGE 5   

 241   2                      {       
 242   3                              CAN_RX_Buf[i]=MCP2515_ReadByte(RXB0D0+i);//把CAN接收到的数据放入指定缓冲区
 243   3                              i++;
 244   3                      }
 245   2              }
 246   1              MCP2515_WriteByte(CANINTF,0);//清除中断标志位(中断标志寄存器必须由MCU清零)
 247   1              return len;
 248   1      }
 249          
 250          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    526    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
