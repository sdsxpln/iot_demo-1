<!DOCTYPE html>
<html dir="ltr" class="js olCSSsupported desktop" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <title>en:users:documentation:hostapd [Linux Wireless]</title>
    <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
    <meta name="generator" content="DokuWiki">
<meta name="robots" content="index,follow">
<meta name="keywords" content="en,users,documentation,hostapd">
<link rel="search" type="application/opensearchdescription+xml" href="https://wireless.wiki.kernel.org/lib/exe/opensearch.php" title="Linux Wireless">
<link rel="start" href="https://wireless.wiki.kernel.org/">
<link rel="contents" href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd?do=index" title="Sitemap">
<link rel="alternate" type="application/rss+xml" title="Recent changes" href="https://wireless.wiki.kernel.org/feed.php">
<link rel="alternate" type="application/rss+xml" title="Current namespace" href="https://wireless.wiki.kernel.org/feed.php?mode=list&amp;ns=en:users:documentation">
<link rel="alternate" type="text/html" title="Plain HTML" href="https://wireless.wiki.kernel.org/_export/xhtml/en/users/documentation/hostapd">
<link rel="alternate" type="text/plain" title="Wiki Markup" href="https://wireless.wiki.kernel.org/_export/raw/en/users/documentation/hostapd">
<link rel="canonical" href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd">
<link rel="stylesheet" type="text/css" href="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/css.css">
<script type="text/javascript">/*<![CDATA[*/var NS='en:users:documentation';var JSINFO = {"id":"en:users:documentation:hostapd","namespace":"en:users:documentation","plugin_folded":{"hide":"hide","reveal":"reveal"}};
/*!]]>*/</script>
<script type="text/javascript" charset="utf-8" src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/js.php"></script><style type="text/css" media="screen"><!--/*--><![CDATA[/*><!--*/ .folded.hidden { display: none; } .folder .indicator { visibility: visible; } /*]]>*/--></style>
<script type="text/javascript">/*<![CDATA[*/document.documentElement.className += ' olCSSsupported';
/*!]]>*/</script>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="shortcut icon" href="https://wireless.wiki.kernel.org/lib/tpl/dokuwiki/images/favicon.ico">
<link rel="apple-touch-icon" href="https://wireless.wiki.kernel.org/lib/tpl/dokuwiki/images/apple-touch-icon.png">
    </head>

<body>
    <!--[if lte IE 7 ]><div id="IE7"><![endif]--><!--[if IE 8 ]><div id="IE8"><![endif]-->
    <div id="dokuwiki__site"><div id="dokuwiki__top" class="site dokuwiki mode_show tpl_dokuwiki    showSidebar hasSidebar">

        
<!-- ********** HEADER ********** -->
<div id="dokuwiki__header"><div class="pad group">

    
    <div class="headings group">
        <ul class="a11y skip">
            <li><a href="#dokuwiki__content">skip to content</a></li>
        </ul>

        <h1><a href="https://wireless.wiki.kernel.org/welcome" accesskey="h" title="[H]"><img src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/logo.png" alt="" width="64" height="64"> <span>Linux Wireless</span></a></h1>
            </div>

    <div class="tools group">
        <!-- USER TOOLS -->
                    <div id="dokuwiki__usertools">
                <h3 class="a11y">User Tools</h3>
                <ul>
                    <li><a href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd?do=login&amp;sectok=f2fd358c45ee184c46610a635e15ba67" class="action login" rel="nofollow" title="Login">Login</a></li>                </ul>
            </div>
        
        <!-- SITE TOOLS -->
        <div id="dokuwiki__sitetools">
            <h3 class="a11y">Site Tools</h3>
            <form action="/welcome" accept-charset="utf-8" class="search" id="dw__search" method="get" role="search"><div class="no"><input name="do" value="search" type="hidden"><input id="qsearch__in" accesskey="f" name="id" class="edit" title="[F]" type="text"><input value="Search" class="button" title="Search" type="submit"><div id="qsearch__out" class="ajax_qsearch JSpopup" style="display: none;"></div></div></form>            <div class="mobileTools">
                <form action="/doku.php" method="get" accept-charset="utf-8"><div class="no"><input name="id" value="en:users:documentation:hostapd" type="hidden"><select name="do" class="edit quickselect" title="Tools"><option value="" selected="selected">Tools</option><optgroup label="Page Tools"><option value="edit">Show pagesource</option><option value="revisions">Old revisions</option><option value="backlink">Backlinks</option></optgroup><optgroup label="Site Tools"><option value="recent">Recent changes</option><option value="media">Media Manager</option><option value="index">Sitemap</option></optgroup><optgroup label="User Tools"><option value="login">Login</option></optgroup></select><input value="&gt;" style="display: none;" type="submit"></div></form>            </div>
            <ul>
                <li><a href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd?do=recent" class="action recent" accesskey="r" rel="nofollow" title="Recent changes [R]">Recent changes</a></li><li><a href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd?do=media&amp;ns=en%3Ausers%3Adocumentation" class="action media" rel="nofollow" title="Media Manager">Media Manager</a></li><li><a href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd?do=index" class="action index" accesskey="x" rel="nofollow" title="Sitemap [X]">Sitemap</a></li>            </ul>
        </div>

    </div>

    <!-- BREADCRUMBS -->
            <div class="breadcrumbs">
                                        <div class="trace"><span class="bchead">Trace:</span> <span class="bcsep">•</span> <span class="curid"><bdi><a href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd" class="breadcrumbs" title="en:users:documentation:hostapd">hostapd</a></bdi></span></div>
                    </div>
    
    
    <hr class="a11y">
</div></div><!-- /header -->

        <div class="wrapper group">

                            <!-- ********** ASIDE ********** -->
                <div id="dokuwiki__aside"><div class="pad aside include group">
                    <h3 class="toggle open" style="cursor: pointer; display: none;"><strong><span>−</span></strong>Sidebar</h3>
                    <div class="content" style="">
                                                                        
<p aria-expanded="true" style="">
<strong> <a href="https://wireless.wiki.kernel.org/en/users" class="wikilink1" title="en:users">Users</a> </strong>
</p>
<ul aria-expanded="true" style="">
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users" class="wikilink1" title="en:users">main page</a></div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users/support" class="wikilink1" title="en:users:support">Support</a></div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users/drivers" class="wikilink1" title="en:users:drivers">Drivers</a></div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users/devices" class="wikilink1" title="en:users:devices">Devices</a></div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users/download" class="wikilink1" title="en:users:download">Download</a></div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users/documentation" class="wikilink1" title="en:users:documentation">Documentation</a></div>
</li>
</ul>

<p aria-expanded="true" style="">
<strong> <a href="https://wireless.wiki.kernel.org/en/vendors" class="wikilink1" title="en:vendors">Vendors</a> </strong>
</p>
<ul aria-expanded="true" style="">
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/vendors/vendorsupport" class="wikilink1" title="en:vendors:vendorsupport">Vendor Support</a></div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/vendors/driverdevelopment" class="wikilink1" title="en:vendors:driverdevelopment">Driver Development</a></div>
</li>
</ul>

<p aria-expanded="true" style="">
<strong> <a href="https://wireless.wiki.kernel.org/en/developers" class="wikilink1" title="en:developers">Developers</a> </strong>
</p>
<ul aria-expanded="true" style="">
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/developers/documentation" class="wikilink1" title="en:developers:documentation">Documentation</a></div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/developers/mailinglists" class="wikilink1" title="en:developers:mailinglists">mailing lists</a></div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/developers/todo-list" class="wikilink1" title="en:developers:todo-list">todo list</a></div>
</li>
</ul>
                                            </div>
                </div></div><!-- /aside -->
            
            <!-- ********** CONTENT ********** -->
            <div id="dokuwiki__content"><div class="pad group">

                <div class="pageId"><span>en:users:documentation:hostapd</span></div>

                <div class="page group" style="min-height: 292px;">
                                                            <!-- wikipage start -->
                    <!-- TOC START -->
<div id="dw__toc">
<h3 class="toggle open" style="cursor: pointer;"><strong><span>−</span></strong>Table of Contents</h3>
<div style="">

<ul class="toc" aria-expanded="true" style="">
<li class="level2"><div class="li"><a href="#about_hostapd">About hostapd</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="#details_of_nl80211">Details of nl80211</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="#getting_hostapd">Getting hostapd</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="#using_your_distributions_hostapd">Using your distributions hostapd</a></div></li>
<li class="level3"><div class="li"><a href="#download_and_compile_hostapd">Download and compile hostapd</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="#configuring_hostapd">Configuring hostapd</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="#establishing_baseline_for_configuration">Establishing Baseline for Configuration</a></div></li>
<li class="level3"><div class="li"><a href="#common_options">Common Options</a></div></li>
<li class="level3"><div class="li"><a href="#wireless_interface">Wireless Interface</a></div></li>
<li class="level3"><div class="li"><a href="#wireless_environment">Wireless Environment</a></div></li>
<li class="level3"><div class="li"><a href="#authentication_and_encryption">Authentication and Encryption</a></div></li>
<li class="level3"><div class="li"><a href="#dynamic_vlan_tagging">Dynamic VLAN tagging</a></div></li>
<li class="level3"><div class="li"><a href="#ieee_80211irsnwpa2_pre-authentication">IEEE 802.11i/RSN/WPA2 pre-authentication</a></div></li>
<li class="level3"><div class="li"><a href="#admission_control_mandatory_settings">Admission Control Mandatory settings</a></div></li>
<li class="level3"><div class="li"><a href="#automatic_channel_selection">Automatic channel selection</a></div></li>
</ul></li>
</ul>
</div>
</div>
<!-- TOC END -->

<p>
<strong>hostapd Linux documentation page</strong>
</p>

<h2 class="sectionedit1" id="about_hostapd">About hostapd</h2>
<div class="level2">

<p>
Homepage: <a href="http://w1.fi/hostapd/" class="urlextern" title="http://w1.fi/hostapd/" rel="nofollow">http://w1.fi/hostapd/</a>
</p>

<p>
hostapd is an <em>IEEE 802.11 AP and IEEE 802.1X/WPA/WPA2/EAP/RADIUS Authenticator</em>.
  This page is dedicated to the Linux documentation of it's 
implementation and use. Please refer to the hostapd home page for 
information for other Operating Systems. 
</p>

<p>
To communicate with a kernel driver hostapd has to use some interface. All <strong>new</strong> cfg80211 (and mac80211) based drivers that implement AP functionality are supported using <strong><a href="https://wireless.wiki.kernel.org/en/developers/documentation/nl80211" class="wikilink1" title="en:developers:documentation:nl80211">nl80211</a></strong> interface. 
</p>

<p>
For <strong>old</strong> kernel drivers hostapd contains separated drivers. As far a Linux is concerned, there are 3 other drivers you can use:
</p>
<ul>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users/drivers/hostap" class="wikilink2" title="en:users:drivers:hostap" rel="nofollow">HostAP</a> </div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users/drivers/madwifi" class="wikilink1" title="en:users:drivers:madwifi">madwifi</a> </div>
</li>
<li class="level1"><div class="li"> <a href="https://wireless.wiki.kernel.org/en/users/drivers/prism54" class="wikilink2" title="en:users:drivers:prism54" rel="nofollow">prism54</a> </div>
</li>
</ul>

<p>
The mac80211 subsystem moves all aspects of master mode into user space.
 It depends on hostapd to handle authenticating clients, setting 
encryption keys, establishing key rotation policy, and other aspects of 
the wireless infrastructure. Due to this, the old method of issuing 
'iwconfig &lt;wireless interface&gt; mode master' no longer works. It 
also means that userspace programs like hostapd need a way to management
 frames. 
</p>

</div>

<h3 class="sectionedit2" id="details_of_nl80211">Details of nl80211</h3>
<div class="level3">

<p>
In old days receiving and sending management frames required monitor 
mode interface. You needed one interface running in master mode for a <strong>standard</strong> traffic and another one for authentication, keys management, etc. The second one didn't require any specific <abbr title="Application Programming Interface">API</abbr>, it was accessed using a standard Linux socket. This method is still supported by nl80211 driver as a fallback. 
</p>

<p>
Later nl80211 implemented special commands for sending management frames
 (NL80211_CMD_FRAME) and subscribing to them 
(NL80211_CMD_REGISTER_FRAME). This allowed user space to handle wireless
 infrastructure using a single interface only. This is currently 
preferred method that can be used with all mac80211 drivers implementing
 AP mode. 
</p>

</div>

<h2 class="sectionedit3" id="getting_hostapd">Getting hostapd</h2>
<div class="level2">

</div>

<h3 class="sectionedit4" id="using_your_distributions_hostapd">Using your distributions hostapd</h3>
<div class="level3">

<p>
It is advisable to try your distributions version of hostapd before 
taking the time to compile and install your own copy.  This will make 
future maintenance easier as you'll be able to use the init scripts 
shipped by the distro and hostapd will be updated by it as well.  If 
your distribution ships 0.6.8 or later, you can test with this bare 
minimum config by creating the file hostapd-minimal.conf: 
</p>
<pre class="code">#change wlan0 to your wireless device
interface=wlan0
driver=nl80211
ssid=test
channel=1</pre>

<p>
If that config errors out with something like: 
</p>
<pre class="code">hostapd $ sudo hostapd ./hostapd-minimal.conf
Configuration file: ./hostapd-minimal.conf
Line 2: invalid/unknown driver 'nl80211'
1 errors found in configuration file './hostapd-minimal.conf'</pre>

<p>
that means that your distro is not shipping hostapd with nl80211 driver 
support and you'll need to follow the building instructions that follow.
  If it works, you can skip down to the configuring hostapd section.  If
 not, continue on. 
</p>

</div>

<h3 class="sectionedit5" id="download_and_compile_hostapd">Download and compile hostapd</h3>
<div class="level3">

<p>
<em>Using hostapd with nl80211 requires you to have at least libnl-1.0 
pre8 as this release introduced genl, Generic Netlink, which nl80211 
relies on. Most distributions are shipping this or a later release by 
now. </em> To compile on fedora or other distibutions that separate out the headers from the binaries, you need the libnl-devel package. 
</p>

<p>
Throughout this section, versions will be referred to by: x.y.z 
</p>

<p>
ex: hostapd-0.6.8.tar.gz would be referred to as hostapd-x.y.z.tar.gz 
</p>

<p>
<em>You can get the latest development version of hostapd from the git repository with: </em>
</p>
<pre class="code">git clone git://w1.fi/srv/git/hostap.git
cd hostap/hostapd</pre>

<p>
Or you can get a stable release (0.6.8 or later reccomended) by downloading the tarball from <a href="http://w1.fi/hostapd/" class="urlextern" title="http://w1.fi/hostapd/" rel="nofollow">http://w1.fi/hostapd/</a>. 
</p>
<pre class="code">wget http://w1.fi/releases/hostapd-x.y.z.tar.gz
tar xzvf hostapd-x.y.z.tar.gz
cd hostapd-x.y.z/hostapd</pre>

<p>
Next, we need to configure the hostapd build to enable nl80211 driver 
support.  Copy defconfig to .config, and open it in your preferred text 
editor.  Also, there are other options that you may want to enable, like
 802.11n support if your hardware can do it.  Most of the other 
encryption types and features aren't needed for most applications, so if
 you're questioning if you need to enable it, you probably don't need 
to. 
</p>
<pre class="code">cp defconfig .config
vi .config</pre>

<p>
Now find this line: 
</p>
<pre class="code">#CONFIG_DRIVER_NL80211=y</pre>

<p>
and uncomment it by removing the '#' sign.  Repeat for other settings 
that you may be interested in.  The basic configuration, with only this 
line uncommented is enough to get hostapd up and running with WPA/WPA2 
authentication and encryption. 
</p>

<p>
Next, compile hostapd: 
</p>
<pre class="code">make</pre>

<p>
if this fails with errors like: 
</p>
<pre class="code">driver_nl80211.c:21:31: warning: netlink/genl/genl.h: No such file or directory
driver_nl80211.c:22:33: warning: netlink/genl/family.h: No such file or directory
driver_nl80211.c:23:31: warning: netlink/genl/ctrl.h: No such file or directory
driver_nl80211.c:24:25: warning: netlink/msg.h: No such file or directory
driver_nl80211.c:25:26: warning: netlink/attr.h: No such file or directory</pre>

<p>
you need to install/update libnl-1.0pre8 (or later).  If all goes well 
and the compilation finishes, try the minimal hostapd again, see the 
section Using your distributions hostapd above for that. 
</p>
<pre class="code">hostapd # ./hostapd ./hostapd-minimal.conf
Configuration file: ./hostapd-minimal.conf
Using interface wlan1 with hwaddr 00:0d:0b:cf:04:40 and ssid 'test'</pre>

<p>
If that starts as the example here shows, you can move on to configuring
 hostapd.  If it fails to start with errors about the driver not being 
found, review the steps listed above for compiling hostapd again.  If it
 gets the error messages:  
</p>
<pre class="code">Hardware does not support configured mode
wlan0: IEEE 802.11 Hardware does not support configured mode (2)
Could not select hw_mode and channel. (-2)
wlan0: Unable to setup interface.
rmdir[ctrl_interface]: No such file or directory</pre>

<p>
then it means the hw_mode (a, b or g) in the config file is set to a value not supported by the hardware. 
</p>

</div>

<h2 class="sectionedit6" id="configuring_hostapd">Configuring hostapd</h2>
<div class="level2">

</div>

<h3 class="sectionedit7" id="establishing_baseline_for_configuration">Establishing Baseline for Configuration</h3>
<div class="level3">

<p>
Before configuring hostapd, you need to know the capabilities of the 
clients that will be using it.  Not all clients will support all of the 
methods you may want to implement, so a baseline configuration needs to 
be established.  You will also want to do a survey of your area to find 
the channel that has the fewest other APs on it.  When choosing which 
channel to use, it is important to remember that the channels overlap 
with any channels that are within 20MHz. 
</p>

<p>
Examples of the baseline you might establish: 
</p>
<pre class="code">Encryption: wpa-psk + tkip
Wireless Mode: g
Normal for an environment that has to support semi legacy devices, that don't support ccmp or wpa2</pre>
<pre class="code">Encryption: wpa2-psk + ccmp
Wireless Mode: g+n
Normal for an environment that has only up to date hardware and software</pre>
<pre class="code">Encryption: wep
Wireless Mode: b
This is the worst-case scenario, as wep is broken and can be trivially 
cracked.  Don't consider this as anything more than keeping casual free 
loaders out.</pre>

<p>
Once you've found your baseline, it's time to edit hostapd.conf.  The configuration options will be broken into 3 sections: 
</p>
<pre class="code">Common Options: options that you will probably want to set
Additional Options: options that are likely useful to at least know you have
Extra Options: options that you aren't likely to need for most setups</pre>

</div>

<h3 class="sectionedit8" id="common_options">Common Options</h3>
<div class="level3">

<p>
The most basic set of options for using hostapd with the nl80211 driver 
have already been provided as the hostapd-minimal.conf.  That is all you
 need if you don't care about consistantly being on the same channel, 
don't need/want encryption, and don't need a flashy name.  However, that
 is not a realistic idea in the real world. 
</p>

<p>
First, we'll setup the wireless interface settings, then the wireless 
environment settings, and finally the authentication and encryption. 
</p>

</div>

<h3 class="sectionedit9" id="wireless_interface">Wireless Interface</h3>
<div class="level3">

<p>
Setting Summary:
</p>
<ul>
<li class="level1"><div class="li"> interface: Tells hostapd what wireless interface to use </div>
</li>
<li class="level2"><div class="li"> bridge: Set to a bridge if the wireless interface in use is part of a network bridge interface </div>
</li>
<li class="level2"><div class="li"> driver: For our purposes, always 
nl80211 If you only have 1 wireless interface, and it's going to be 
bridged with a wired interface, a good example setup would be: </div>
</li>
</ul>
<pre class="code">interface=wlan0
bridge=br0
driver=nl80211</pre>

</div>

<h3 class="sectionedit10" id="wireless_environment">Wireless Environment</h3>
<div class="level3">

<p>
Setting Summary:
</p>
<ul>
<li class="level1"><div class="li"> ssid: Sets the name (SSID = service set identifier) of the network, wireless extensions/iwconfig incorrectly calls this “<em>essid</em>”. </div>
</li>
<li class="level3"><div class="li"> hw_mode: Sets the operating mode of 
the interface, and the allowed channels.  Valid values depend on 
hardware, but are always a subset of a, b, g </div>
</li>
<li class="level3"><div class="li"> channel: Sets the channel for 
hostapd to operate on.  Must be a channel supported by the mode set in 
hw_mode, as well as allowed by your countries Wireless Regulatory rules.
 The ssid is just for ease of configuration.  It is what shows up in 
scan results, and can help in configuring your clients.  Check the scan 
results for your area and choose a name. </div>
</li>
</ul>

<p>
hw_mode needs to be something that all of your hardware supports.  
Setting this to 'g' is probably the most common setup, and also enables 
backwards compatability with 802.11b devices.  Note, this is not where 
you enable 802.11n support, as 802.11n operates on top of 802.11a or 
802.11g's functionality. 
</p>

<p>
channel should be chosen so that it has the minimum overlap with other 
APs or other networks in your area.  802.11 channels are 20mhz (4  
channels) wide in total, or 10mhz (2 channels) wide on each side.  This 
means that an access point on channel 3 will interfere with an acces 
point on channel 1 or channel 5.  Use this to pick a channel.  Most 
consumer APs default to channel 6, so you can use channel 1 or channel 
11 in most cases for the best results.  Also note that the channels 
available to you depends heavily entirerly on the local regulatory 
rules. 
</p>

<p>
An example of a good normal setup is: 
</p>
<pre class="code">ssid=MyNetwork
hw_mode=g
channel=1</pre>

<p>
802.11n Setting Summary 
</p>

<p>
802.11n builds on the settings above, and adds additional functionality.
  If your hardware doesn't support 802.11n, or you don't plan on using 
it, you can ignore these.
</p>
<ul>
<li class="level1"><div class="li"> ieee80211n: Set to 1 to enable 802.11n support, 0 to disable it </div>
</li>
<li class="level4"><div class="li"> ht_capab: A list of the 802.11n 
features supported by your device The explanation of these settings in 
the sample config file are quite helpful, so I'll suggest reading those.
  You can use the command 'iw list' to find a short list of the 
capabilities of your device. </div>
</li>
</ul>

<p>
Example settings: 
</p>
<pre class="code">wme_enabled=1
ieee80211n=1
ht_capab=[HT40+][SHORT-GI-40][DSSS_CCK-40]</pre>

<p>
- HT DSSS/CCK mode in 40MHz: Will/Can use DSSS/CCK in 40 <abbr title="Megahertz">MHz</abbr>
</p>

</div>

<h3 class="sectionedit11" id="authentication_and_encryption">Authentication and Encryption</h3>
<div class="level3">

<p>
There is a lot to the authentication and encryption options in hostapd. 
 This section will cover the basics as far as wep/wpa/wpa2 goes, as well
 as some of the other commonly used options. 
</p>

<p>
Settings Summary:
</p>
<ul>
<li class="level1"><div class="li"> macaddr_acl: This controls mac 
address filtering.  Mac addresses are easily spoofed, so only consider 
the use of this to be augmenting other security measures you have in 
place. </div>
</li>
<li class="level5"><div class="li"> auth_algs: This is a bit field where
 the first bit (1) is for open auth, the second bit (2) is for Shared 
key auth (wep) and both (3) is both. </div>
</li>
<li class="level5"><div class="li"> ignore_broadcast_ssid: This enables/disables broadcasting the ssid. </div>
</li>
<li class="level5"><div class="li"> wpa: This is a bitfield like 
auth_algs.  The first bit enables wpa1 (1), the second bit enables wpa2 
(2), and bothe enables both (3) </div>
</li>
<li class="level5"><div class="li"> wpa_psk/wpa_passphrase: These establish what the pre-shared key will be for wpa authentication. </div>
</li>
<li class="level5"><div class="li"> wpa_key_mgmt: This controls what key management algorithms a client can authenticate with. </div>
</li>
<li class="level5"><div class="li"> wpa_pairwise: This controls wpa's data encryption </div>
</li>
<li class="level5"><div class="li"> rsn_pairwise: This controls wpa2's 
data encryption First, scratch macaddr_acl and ignore_broadcast_ssid 
from your priorities as they only enhance security (and even then, only 
slightly).  Also, WEP has been effectively broken now, so unless you 
HAVE to support wep, scratch that from your list.  This just leaves 
wpa/wpa2.  Per the draft standard, wpa2 is required for 802.11n, and as 
there are known attacks on wpa now, wpa2 is the recommended 
authentication and encryption suite to use.  Fortunately, you can have 
both enabled at once.  If Windows clients are going to be connecting, 
you should leave ccmp encryption out of the wpa_pairwise option, as some
 windows drivers have problems with systems that enable it. </div>
</li>
</ul>

<p>
A good starting point for a wpa &amp; wpa2 enabled access point is: 
</p>
<pre class="code">macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=3
wpa_passphrase=YourPassPhrase
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP</pre>

<p>
If, alternately, you just want to support wpa2, you could use something like: 
</p>
<pre class="code">macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=YourPassPhrase
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP</pre>

<p>
That should be all of the settings that you'll need to change for a 
basic, secure, access point using hostapd with an AP enabled mac80211 
driver. 
</p>

</div>

<h3 class="sectionedit12" id="dynamic_vlan_tagging">Dynamic VLAN tagging</h3>
<div class="level3">

<p>
hostapd can be configured to move STAs into separate VLANs based on RADIUS tunnel attributes (as specified in RFC3580, <a href="http://tools.ietf.org/html/rfc3580#section-3.31" class="urlextern" title="http://tools.ietf.org/html/rfc3580#section-3.31" rel="nofollow">http://tools.ietf.org/html/rfc3580#section-3.31</a>): 
</p>
<pre class="code">Tunnel-Type=VLAN (13)
Tunnel-Medium-Type=802
Tunnel-Private-Group-ID=VLANID</pre>

<p>
To enable dynamic VLAN tagging the following options in hostapd.conf need to be set: 
</p>
<pre class="code">dynamic_vlan=1
vlan_file=/etc/hostapd.vlan</pre>

<p>
A value of 0 disables dynamic VLAN tagging, a value of 1 allows dynamic 
VLAN tagging and a value of 2 will reject the authentication if the 
RADIUS server does not provide the appropriate tunnel attributes. 
</p>

<p>
Furthermore, hostapd needs to know how the VLAN interfaces should be 
named, this is done through an additional config file as specified in 
vlan_file. 
</p>

<p>
Example /etc/hostapd.vlan: 
</p>
<pre class="code">1       wlan0.1
*       wlan0.#</pre>

<p>
This will create a wlan0.1 interface on top of wlan0 and move all STAs 
with the RADIUS supplied vlantag 1 to that interface. The second entry 
is used to dynamically create VLAN interfaces on top of wlan0, hostapd 
will create an interface wlan0.vlantag for each different vlantag as 
supplied by the RADIUS server. For example, if a STA associates and the 
RADIUS server attributes contain the vlantag 100 hostapd will create a 
wlan0.100 interface and map the STA to this new interface. 
</p>

</div>

<h3 class="sectionedit13" id="ieee_80211irsnwpa2_pre-authentication">IEEE 802.11i/RSN/WPA2 pre-authentication</h3>
<div class="level3">

<p>
IEEE 802.11 roaming experience can be enhanced by pre-authenticating the
 IEEE 802.1X/EAP part of the full RSN authentication and key handshake 
before actually associating with a new AP. To enable RSN 
pre-authentication you will need hostapd enabled RSN pre-authentication 
and a STA supplicant that also supports and enables RSN 
pre-authentication. In this section we'll provide a brief on how to 
enable rsn_preauthentication, what this does, and also provide 
references on how to <a href="http://wiki.openwrt.org/doc/recipes/rsn_preauthentication" class="urlextern" title="http://wiki.openwrt.org/doc/recipes/rsn_preauthentication" rel="nofollow">enable RSN preauthentication on OpenWrt</a> and <a href="https://wireless.wiki.kernel.org/en/users/documentation/wpa_supplicant" class="wikilink1" title="en:users:documentation:wpa_supplicant">enabling RSN preauthentication on wpa_supplicant</a> in order to test it. 
</p>

<p>
First and foremost you need to ensure all your APs will be using the same SSID. 
</p>

<p>
In order to ensure your APs and RADIUS are on the same network / switch 
and can talk to each other you can ping each other and review the <strong>arp -a</strong> output, you should see the MAC address of each other's AP's bridge interface on the <strong>HW address</strong> column, as well as the RADIUS server's MAC address. 
</p>

<p>
For example, say we have two APs and one RADIUS server:
</p>
<ul>
<li class="level1"><div class="li"> ap136: 192.168.4.120 </div>
</li>
<li class="level6"><div class="li"> db120: 192.168.4.139 </div>
</li>
<li class="level6"><div class="li"> Radius server: 192.168.4.149 On ap136: </div>
</li>
</ul>
<pre class="code">root@ap136 ~ # arp -a
IP address       HW type     Flags       HW address            Mask     Device
192.168.4.139    0x1         0x2         00:03:7f:11:20:00     *        br-lan
192.168.4.1      0x1         0x2         68:7f:74:3b:b1:0d     *        br-lan
192.168.4.149    0x1         0x2         c8:60:00:da:57:a7     *        br-lan
192.168.4.109    0x1         0x2         00:27:10:49:c6:44     *        br-lan</pre>

<p>
On db120: 
</p>
<pre class="code">root@db120 ~ # arp -a
IP address       HW type     Flags       HW address            Mask     Device
192.168.4.109    0x1         0x2         00:27:10:49:c6:44     *        br-lan
192.168.4.149    0x1         0x2         c8:60:00:da:57:a7     *        br-lan
192.168.4.1      0x1         0x2         68:7f:74:3b:b1:0d     *        br-lan
192.168.4.120    0x1         0x2         a2:69:db:89:44:88     *        br-lan</pre>

<p>
Assuming in this example the RADIUS server is on 192.168.4.149 on hostapd.conf you'll need to enable: 
</p>
<pre class="code">auth_server_addr=192.168.4.149
auth_server_port=1812
auth_server_shared_secret=testing123
wpa_key_mgmt=WPA-EAP
disable_pmksa_caching=1
okc=0
nas_identifier=
eapol_key_index_workaround=1
ieee8021x=1
wpa_key_mgmt=WPA-EAP
wpa_group_rekey=2000
auth_algs=1
wpa=2
wpa_pairwise=CCMP
wpa_group_rekey=2000
ssid=mcgrof-ap136-01
bridge=br-lan
rsn_preauth=1
rsn_preauth_interfaces=br-lan</pre>

<p>
Full example conf files generated by <a href="https://wireless.wiki.kernel.org/en/users/documentation/openwrt" class="wikilink2" title="en:users:documentation:openwrt" rel="nofollow">OpenWrt</a> AA releases:
</p>
<ul>
<li class="level1"><div class="li"> <a href="https://gist.github.com/mcgrof/5515354" class="urlextern" title="https://gist.github.com/mcgrof/5515354" rel="nofollow">ap136 hostapd-phy0.conf</a> </div>
</li>
<li class="level7"><div class="li"> <a href="https://gist.github.com/mcgrof/5515362" class="urlextern" title="https://gist.github.com/mcgrof/5515362" rel="nofollow">db120 hostapd-phy0.conf</a> </div>
</li>
</ul>

<p>
Note: the same <strong>SSID</strong> must be used for RSN pre-authentication. 
</p>

<p>
If using <a href="https://wireless.wiki.kernel.org/en/users/documentation/openwrt" class="wikilink2" title="en:users:documentation:openwrt" rel="nofollow">OpenWrt</a>,
 simply enabling rsn_preauth is sufficient, openwrt will automatically 
add the rsn_preauth_interfaces for you, this is typically your bridge 
interface. You'll need two instances of hostapd running on two separate 
devices on the same network / switch. You'll also need a Radius server 
installed on a server on the same network / switch. FreeRADIUS is an 
example RADIUS solution to install, go <a href="http://www.openlogic.com/wazi/bid/188089/Authenticating-Wi-Fi-Users-with-FreeRADIUS%20with%20EAP-TTLS" class="urlextern" title="http://www.openlogic.com/wazi/bid/188089/Authenticating-Wi-Fi-Users-with-FreeRADIUS%20with%20EAP-TTLS" rel="nofollow">read how to install and configure FreeRADIUS for authenticating 802.11 users</a>. 
</p>

<p>
Be sure to test the Radius server, you can do this by using the eapol_test program, part of hostapd code. 
</p>
<pre class="code">cd wpa_supplicant/
cp defconfig .config
make eapol_test</pre>

<p>
Then edit a file called eapol-config, only to be used for this simple test of the RADIUS server: 
</p>
<pre class="code">network={
eap=TTLS
eapol_flags=0
key_mgmt=IEEE8021X
identity="testuser"
password="testpassword"
ca_cert="/home/mcgrof/server.pem"
phase2="auth=TTLS"
}</pre>

<p>
You should now be able to test this user as follows: 
</p>
<pre class="code">./eapol_test -c eapol-config -a 192.168.x.x -p 1812 -s testing123 -r1</pre>

<p>
Provided you have two APs properly configured as describe with 
rsn_preauth as described above and on the same network you should now be
 able to configure a client for RSN pre-authentication. Details on this 
are available on the <a href="https://wireless.wiki.kernel.org/en/users/documentation/wpa_supplicant" class="wikilink1" title="en:users:documentation:wpa_supplicant">wpa_supplicant RSN preauthentication documentation section</a>. 
</p>

<p>
On the RADIUS server you want to see something like this, the second 
authentication from the STA to the second AP would go through the 
already established network on the first AP, after it associated with 
it. To be precise when a STA decides to try to preauthenticate against 
another AP is left up to each implementation to decide. This depends on 
the driver behavior and how it reports scan results or PMKSA candidates.
 Today wpa_supplicant does this after association and after a first scan
 completion. 
</p>
<pre class="code">root@radius:~# radsniff| grep ^Access
Access-Request Id 0     192.168.4.120:51442 -&gt; 192.168.4.149:1812       +0.000
Access-Challenge Id 0   192.168.4.149:1812 -&gt; 192.168.4.120:51442       +0.000
Access-Request Id 1     192.168.4.120:51442 -&gt; 192.168.4.149:1812       +0.009
Access-Challenge Id 1   192.168.4.149:1812 -&gt; 192.168.4.120:51442       +0.012
Access-Request Id 2     192.168.4.120:51442 -&gt; 192.168.4.149:1812       +0.017
Access-Challenge Id 2   192.168.4.149:1812 -&gt; 192.168.4.120:51442       +0.018
Access-Request Id 3     192.168.4.120:51442 -&gt; 192.168.4.149:1812       +0.065
Access-Challenge Id 3   192.168.4.149:1812 -&gt; 192.168.4.120:51442       +0.066
Access-Request Id 4     192.168.4.120:51442 -&gt; 192.168.4.149:1812       +0.077
Access-Challenge Id 4   192.168.4.149:1812 -&gt; 192.168.4.120:51442       +0.078
Access-Request Id 5     192.168.4.120:51442 -&gt; 192.168.4.149:1812       +0.083
Access-Accept Id 5      192.168.4.149:1812 -&gt; 192.168.4.120:51442       +0.083
Access-Request Id 0     192.168.4.139:35038 -&gt; 192.168.4.149:1812       +2.162
Access-Challenge Id 0   192.168.4.149:1812 -&gt; 192.168.4.139:35038       +2.162
Access-Request Id 1     192.168.4.139:35038 -&gt; 192.168.4.149:1812       +2.168
Access-Challenge Id 1   192.168.4.149:1812 -&gt; 192.168.4.139:35038       +2.171
Access-Request Id 2     192.168.4.139:35038 -&gt; 192.168.4.149:1812       +2.174
Access-Challenge Id 2   192.168.4.149:1812 -&gt; 192.168.4.139:35038       +2.175
Access-Request Id 3     192.168.4.139:35038 -&gt; 192.168.4.149:1812       +2.216
Access-Challenge Id 3   192.168.4.149:1812 -&gt; 192.168.4.139:35038       +2.217
Access-Request Id 4     192.168.4.139:35038 -&gt; 192.168.4.149:1812       +2.222
Access-Challenge Id 4   192.168.4.149:1812 -&gt; 192.168.4.139:35038       +2.223
Access-Request Id 5     192.168.4.139:35038 -&gt; 192.168.4.149:1812       +2.225
Access-Accept Id 5      192.168.4.149:1812 -&gt; 192.168.4.139:35038       +2.225</pre>

<p>
These logs reveal the STA choose to authenticate first with ap136 and then db120 once connected on the network with ap136. 
</p>

<p>
Assuming you can log in to the STA you should be able to see <strong>two</strong> PMKSA entries: 
</p>
<pre class="code">root@android:/data/local # wpa_cli -i wlan0 pmksa     
                                                                        
                               
Index / AA / PMKID / expiration (in seconds) / opportunistic
1 00:03:7f:47:20:a5 eb25d3d579742c0384230fa66748f857 43042 0
2 00:03:7f:42:10:09 a99081d41e18f4632994b59b50bb2447 43044 0</pre>

<p>
The first one should correspond to the BSSID / MAC address of the wlan 
interface of ap136, so for example for ap136 this would be the MAC 
address of wlan1. The second one corresponds to the BSSID / MAC address 
of the wlan interface of db120, in this case wlan0. To test PMKSA 
caching you can roam from the STA from one AP to another and verify that
 upon <em>reassociation</em> to the first AP the STA still has present the same PMKID (third field above, or sniff it from the network). 
</p>

<p>
For testing purposes of RSN preauthentication you want to disable 
Opportunistic Key Caching as otherwise the PMKSA that the AP derived may
 have come from Opportunistic Key Caching instead of RSN 
preauthentication. Opportunistic Key Caching enables the PMKSA entries 
to be shared between configured interfaces and BSSes (i.e., all 
configurations within a single hostapd process). 
</p>

</div>

<h3 class="sectionedit14" id="admission_control_mandatory_settings">Admission Control Mandatory settings</h3>
<div class="level3">

<p>
Admission Control Mandatory (ACM) can be used to limit access to higher priority ACs for traffic control <strong>if</strong>
 admission control were implemented but it is not implemented in hostapd
 today. ACM can be enabled for the 4 ACs but should be disabled by 
default in hostapd.conf 
</p>
<pre class="code">wmm_ac_bk_acm=0
wmm_ac_be_acm=0
wmm_ac_vi_acm=0
wmm_ac_vo_acm=0</pre>

<p>
ACM should be disabled by default.  In mac80211 we have a work around to deal with <strong>strange</strong>
 access points that have been configured all ACs to require admission 
control to transmit frames using AC_BK. Setting all ACs to require 
admission control would be very strange configuration and that should 
never be used. 
</p>

<p>
There is no point in setting wmm_ac_[option]_acm=1 with any 
mac80211-based driver since they do not support admission control 
anyway. The only use for this with a driver that does not support 
admission control is for testing purposes. 
</p>

</div>

<h3 class="sectionedit15" id="automatic_channel_selection">Automatic channel selection</h3>
<div class="level3">

<p>
This is a work in progress. The patches are yet to be included in mainline hostapd. 
</p>

<p>
See the <a href="http://wireless.kernel.org/en/users/Documentation/acs" class="urlextern" title="http://wireless.kernel.org/en/users/Documentation/acs" rel="nofollow">ACS sub-page</a> for more details. 
</p>

</div>

                    <!-- wikipage stop -->
                                    </div>

                <div class="docInfo"><bdi>en/users/documentation/hostapd.txt</bdi> · Last modified: 2016/09/04 14:50 by <bdi>Jan Verhaeghe</bdi></div>

                            </div></div><!-- /content -->

            <hr class="a11y">

            <!-- PAGE ACTIONS -->
            <div id="dokuwiki__pagetools">
                <h3 class="a11y">Page Tools</h3>
                <div class="tools">
                    <ul>
                        <li><a href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd?do=edit" class="action source" accesskey="v" rel="nofollow" title="Show pagesource [V]"><span>Show pagesource</span></a></li><li><a href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd?do=revisions" class="action revs" accesskey="o" rel="nofollow" title="Old revisions [O]"><span>Old revisions</span></a></li><li><a href="https://wireless.wiki.kernel.org/en/users/documentation/hostapd?do=backlink" class="action backlink" rel="nofollow" title="Backlinks"><span>Backlinks</span></a></li><li><a href="#dokuwiki__top" class="action top" accesskey="t" rel="nofollow" title="Back to top [T]"><span>Back to top</span></a></li>                    </ul>
                </div>
            </div>
        </div><!-- /wrapper -->

        
<!-- ********** FOOTER ********** -->
<div id="dokuwiki__footer"><div class="pad">
    <div class="license">Except where otherwise noted, content on this wiki is licensed under the following license: <bdi><a href="http://creativecommons.org/licenses/by/4.0/" rel="license" class="urlextern">Creative Commons Attribution 4.0 International License</a></bdi></div>
    <div class="buttons">
        <a href="http://creativecommons.org/licenses/by/4.0/" rel="license"><img src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/cc-by-40.png" alt="Creative Commons Attribution 4.0 International License"></a>        <a href="http://www.dokuwiki.org/donate" title="Donate"><img src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/button-donate.gif" alt="Donate" width="80" height="15"></a>
        <a href="http://www.php.net/" title="Powered by PHP"><img src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/button-php.gif" alt="Powered by PHP" width="80" height="15"></a>
        <a href="http://validator.w3.org/check/referer" title="Valid HTML5"><img src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/button-html5.png" alt="Valid HTML5" width="80" height="15"></a>
        <a href="http://jigsaw.w3.org/css-validator/check/referer?profile=css3" title="Valid CSS"><img src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/button-css.png" alt="Valid CSS" width="80" height="15"></a>
        <a href="http://dokuwiki.org/" title="Driven by DokuWiki"><img src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/button-dw.png" alt="Driven by DokuWiki" width="80" height="15"></a>
    </div>
</div></div><!-- /footer -->

    </div></div><!-- /site -->

    <div class="no"><img src="en%20users%20documentation%20hostapd%20[Linux%20Wireless]_files/indexer.gif" alt="" width="2" height="1"></div>
    <div id="screen__mode" class="no"></div>    <!--[if ( lte IE 7 | IE 8 ) ]></div><![endif]-->


</body></html>