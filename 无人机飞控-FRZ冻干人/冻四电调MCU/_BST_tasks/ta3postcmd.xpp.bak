//
int ta3postcmd_state = 0; 
U16 ta3postcmd_ch;
U16 ta3postcmd_speed;
U16 ta3postcmd_check;
U16 ta3postcmd_speedall[4];
//U8 ta3postcmd_L2[ sizeof( struct M4_t ) * 2 ];  
//U8 ta3postcmd_L2len = sizeof( struct M4_t ) * 2;  
//U8 ta3postcmd_L2i = 0;  
//struct TM_t ta3postcmd_tm;
#define  ta3postcmd_ComXSendU8ss    Com1SendU8ss     
//#define  ta3postcmd_ComXSendU8ss    Com2SendU8ss     
#if	 0
//#THREADBEGIN#
void ta3postcmd( int *pstate )
{
	//#FUNCBEGIN#
	while(1)
	{
		if( M22[0].m_busy_flag )
		{
			//ATCHS+<ch_num,0~3>,<hight_time,700~2100>|<chk>;  ch speed
			
						//ATCHS+<ch_num,1~4>,<hight_time,700~2100>|<chk>;  ch speed
						
			
						ll1_push();
						ll1_eat_szvt( "ATCHS+" + 2 );
						if( ll1_pws->m_rc )
						{
							ll1_eat_str_whitevt( " " ); 	//前空格
							ta3postcmd_ch = ll1_eat_uint(); 
							ll1_eat_str_whitevt( " " ); 	//后空格
						 
							if( ta3postcmd_ch > 4 )
							{
								ta3postcmd_ComXSendU8ss( "ERR. too large ch num.\x0d\x0a" );
			
								goto LLL_15; // to LL_AT命令处理结束
							}
						
							ll1_eat_szvt( "," );
							if( !ll1_pws->m_rc )
							{
								ta3postcmd_ComXSendU8ss( "ERR. expect speed num.\x0d\x0a" );
								
								goto LLL_15; // to LL_AT命令处理结束
							}
			
							ta3postcmd_speed = ll1_eat_uint(); 
							
							if( ta3postcmd_speed < 700 || ta3postcmd_speed > 2100 )
							{
								ta3postcmd_ComXSendU8ss( "ERR. speed num out of range.\x0d\x0a" );
			
								goto LLL_15; // to LL_AT命令处理结束
							}
						
							ll1_eat_szvt( "|" );
							if( !ll1_pws->m_rc )
							{
								ta3postcmd_ComXSendU8ss( "ERR. expect check num.\x0d\x0a" );
								
								goto LLL_15; // to LL_AT命令处理结束
							}
			
							ta3postcmd_check = ll1_eat_uint(); 
			
							
							//all ok
							
							if( ta3postcmd_ch == 1 )
							{
								M12[0].m_hi_tta = ta3postcmd_speed;
								sharedata_main_ready( &(M12[0]) , &(M12[1]) , &(M12[2]) , sizeof( struct M12Pwm_t ) );
							}
							else if( ta3postcmd_ch == 2 )
							{
								M12[0].m_hi_ttb = ta3postcmd_speed;
								sharedata_main_ready( &(M12[0]) , &(M12[1]) , &(M12[2]) , sizeof( struct M12Pwm_t ) );
							}
							else if( ta3postcmd_ch == 3 )
							{
								M12[0].m_hi_ttc = ta3postcmd_speed;
								sharedata_main_ready( &(M12[0]) , &(M12[1]) , &(M12[2]) , sizeof( struct M12Pwm_t ) );
							}
							else if( ta3postcmd_ch == 4 ) 
							{
								M12[0].m_hi_ttd = ta3postcmd_speed;
								sharedata_main_ready( &(M12[0]) , &(M12[1]) , &(M12[2]) , sizeof( struct M12Pwm_t ) );
							}
			
				
							ta3postcmd_ComXSendU8ss( "OK\x0d\x0a" );
						
							goto LLL_15; // to LL_AT命令处理结束
							
						}
						else
						{
							ll1_pop();
						}
			
			
			
			
			
			
			//ATCHA+<hight_time,700~2100共4个数值>|<chk>;  多通道speed一个命令设置
			
						//ATCHS+<ch_num,1~4>,<hight_time,700~2100>|<chk>;  ch speed
						
			
						ll1_push();
						ll1_eat_szvt( "ATCHA+" + 2 );
						if( ll1_pws->m_rc )
						{
							for( ta3postcmd_check = 0; ta3postcmd_check < 4; ta3postcmd_check++ )
							{
								ta3postcmd_speedall[ta3postcmd_check] = ll1_eat_uint(); 
								
								if( ta3postcmd_speedall[ta3postcmd_check] < 700 || ta3postcmd_speedall[ta3postcmd_check] > 2100 )
								{
									ta3postcmd_ComXSendU8ss( "ERR. speed num out of range.\x0d\x0a" );
			
									goto LLL_15; // to LL_AT命令处理结束
								}
			
								if( ta3postcmd_check != 3 )
								{
									ll1_eat_szvt( "," );
									if( !ll1_pws->m_rc )
									{
										ta3postcmd_ComXSendU8ss( "ERR. expect speed num.\x0d\x0a" );
										
										goto LLL_15; // to LL_AT命令处理结束
									}
								}
			
							}
			
							ll1_eat_szvt( "|" );
							if( !ll1_pws->m_rc )
							{
								ta3postcmd_ComXSendU8ss( "ERR. expect check num.\x0d\x0a" );
								
								goto LLL_15; // to LL_AT命令处理结束
							}
			
							ta3postcmd_check = ll1_eat_uint(); 
			
							
							//all ok
							
							M12[0].m_hi_tta = ta3postcmd_speedall[0];
							M12[0].m_hi_ttb = ta3postcmd_speedall[1];
							M12[0].m_hi_ttc = ta3postcmd_speedall[2];
							M12[0].m_hi_ttd = ta3postcmd_speedall[3];
			
							sharedata_main_ready( &(M12[0]) , &(M12[1]) , &(M12[2]) , sizeof( struct M12Pwm_t ) );
						 
				
							ta3postcmd_ComXSendU8ss( "OK\x0d\x0a" );
						
							goto LLL_15; // to LL_AT命令处理结束
							
						}
						else
						{
							ll1_pop();
						}
			
			
			
			
			//ATASK+<type,0,1,2共3个数值>|<chk>;  读取一个向量 0=acc 1=gyro  2=mag
			
						ll1_push();
						ll1_eat_szvt( "ATASK+" + 2 );
						if( ll1_pws->m_rc )
						{
							ta3postcmd_ch = ll1_eat_uint(); 
						
							if( ta3postcmd_ch >= 3 )
							{
								ta3postcmd_ComXSendU8ss( "ERR. too large num.\x0d\x0a" );
			
								goto LLL_15; // to LL_AT命令处理结束
							}
			
			
							ll1_eat_szvt( "|" );
							if( !ll1_pws->m_rc )
							{
								ta3postcmd_ComXSendU8ss( "ERR. expect check num.\x0d\x0a" );
								
								goto LLL_15; // to LL_AT命令处理结束
							}
			
							ta3postcmd_check = ll1_eat_uint(); 
			
							
							//all ok
			
							sprintf( printbuf, "OK. %f,%f,%f,%f\r\n",   MPU9250_data[ta3postcmd_ch][0],
																		MPU9250_data[ta3postcmd_ch][1],
																		MPU9250_data[ta3postcmd_ch][2],
																		MPU9250_data[ta3postcmd_ch][3]	);
							ta3postcmd_ComXSendU8ss( printbuf );
							 
							
						
							goto LLL_15; // to LL_AT命令处理结束
							
						}
						else
						{
							ll1_pop();
						}
			
			
			
			
			//ATPRS+<0>|<chk>;  读取压力和温度。
			
						ll1_push();
						ll1_eat_szvt( "ATPRS+" + 2 );
						if( ll1_pws->m_rc )
						{
							ta3postcmd_ch = ll1_eat_uint(); 
						
			
							ll1_eat_szvt( "|" );
							if( !ll1_pws->m_rc )
							{
								ta3postcmd_ComXSendU8ss( "ERR. expect check num.\x0d\x0a" );
								
								goto LLL_15; // to LL_AT命令处理结束
							}
			
							ta3postcmd_check = ll1_eat_uint(); 
			
							
							//all ok
			
							sprintf( printbuf, "OK. %ld,%ld\r\n",   g_bmp085_pressure, g_bmp085_temperature	);
							//sprintf( printbuf, "OK. %f,%f\r\n",   BMP280_Pressure, BMP280_Temperature	);
							ta3postcmd_ComXSendU8ss( printbuf );
							 
							
						
							goto LLL_15; // to LL_AT命令处理结束
							
						}
						else
						{
							ll1_pop();
						}
			
			
			
			
			//如果以上所有的都未处理：	
			
			ta3postcmd_ComXSendU8ss( "ERR. unknown\x0d\x0a" );
		
			goto LLL_15; // to LL_AT命令处理结束
		}
LLL_15:; // _AT命令处理结束
		
		if( M22[0].m_busy_flag )
		{
			M22[0].m_busy_flag = 0;
		}	
		##DELAY#
	 
	}
	//#FUNCEND#
}
//#THREADEND#
#endif
		 
