<!DOCTYPE html>
<!--STATUS OK-->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=gbk">
<!-- base href="http://blog.csdn.net/liaokesen168/article/details/50930834" -->
<style>
body{position:relative}
body,form{margin:0!important;padding:0!important}
#bd_snap{font:13px arial;color:#000;background:#fff;text-align:left;padding:13px 0 0 20px}
#bd_snap_txt{clear:both;padding:10px 0 2px;line-height:24px;color:#333}
#bd_snap_note{color:#999;padding-bottom:10px}
#bd_snap a{font:13px arial;color:#00c;text-decoration:underline}
#bd_snap_note a{color:#999}
#bd_snap_head{width:860px;height:44px}
#bd_snap_logo{width:162px;height:38px;display:block;background:url(http://www.baidu.com/img/logo-snap.png) no-repeat;margin-right:15px;float:left}
#bd_snap_search{width:680px;position:absolute;left:209px;top:17px}
#bd_snap_kw{width:531px;margin-right: 0;height:24px;padding:4px 7px;padding:6px 7px 2px\9;font:16px arial;vertical-align:top;border: 1px solid #b6b6b6;border-color: #7b7b7b #b6b6b6 #b6b6b6 #7b7b7b;background: #fff;display:inline-block;border-right-width: 0;border-color: #b8b8b8 transparent #ccc #b8b8b8;overflow: hidden;outline:0}
#bd_snap_kw:hover{border-color: #999 transparent #b3b3b3 #999;}
#bd_snap_kw:focus{border-color: #4791ff transparent #4791ff #4791ff}
#bd_snap_su{width:100px;height:34px;font-size:14px;color:#fff;padding:0;letter-spacing: 1px;background: #3385ff; border-bottom: 1px solid #2d78f4;outline: medium;-webkit-appearance: none;-webkit-border-radius: 0;cursor:pointer;border:0}
#bd_snap_search input.bd_snap_btn_h{background: #3075dc;box-shadow: inset 1px 1px 3px #2964bb;-webkit-box-shadow: inset 1px 1px 3px #2964bb;-moz-box-shadow: inset 1px 1px 3px #2964bb;-o-box-shadow: inset 1px 1px 3px #2964bb;}
#bd_snap_search input.btnhover{background: #317ef3;border-bottom: 1px solid #2868c8;box-shadow: 1px 1px 1px #ccc;}
#bd_snap_btn_wr{width:97px;height:34px;display:inline-block;_top:1px;*position:relative}
#bd_snap_ln{height:1px;border-top:1px solid #ACA899;background:#ECE9D8;overflow:hidden}
#bd_snap_txt span a{text-decoration:none}
</style>


</head><body><div id="bd_snap">
    <div id="bd_snap_head">
        <a href="http://www.baidu.com/" id="bd_snap_logo" title="到百度首页"></a>
    </div>
    <div id="bd_snap_txt">您查询的关键词是：<span><a style="color:black;background-color:#ffff66;padding:0 3px;font-weight:bold" href="http://cache.baiducontent.com/c?m=9d78d513d9931eed4fece47e0714c0666843f0642ba1da0209d0843896701c011969b9fd61600705a0d861375ff21c4bea876733615f37b7ec94df0cc0e5c97b72d170752740854518ce4aef8d1d749f778d0cbee94abce4b12f94acd9d2dd5e52cc&amp;p=99708f0ecd904ead17bd9b7e0e108b&amp;newp=882a9546d0815bbc0c81c7710f4a8e231610db2151d7d21f6b82c825d7331b001c3bbfb423241000d2c479650aa94957eff33d70310123a3dda5c91d9fb4c57479ca3d272470&amp;user=baidu&amp;fm=sc&amp;query=bmp280+%B5%D8%D6%B7&amp;qid=beae9b3700002c97&amp;p1=1#baidusnap0">bmp280</a><a style="color:black;background-color:#99ff99;padding:0 3px;font-weight:bold" href="http://cache.baiducontent.com/c?m=9d78d513d9931eed4fece47e0714c0666843f0642ba1da0209d0843896701c011969b9fd61600705a0d861375ff21c4bea876733615f37b7ec94df0cc0e5c97b72d170752740854518ce4aef8d1d749f778d0cbee94abce4b12f94acd9d2dd5e52cc&amp;p=99708f0ecd904ead17bd9b7e0e108b&amp;newp=882a9546d0815bbc0c81c7710f4a8e231610db2151d7d21f6b82c825d7331b001c3bbfb423241000d2c479650aa94957eff33d70310123a3dda5c91d9fb4c57479ca3d272470&amp;user=baidu&amp;fm=sc&amp;query=bmp280+%B5%D8%D6%B7&amp;qid=beae9b3700002c97&amp;p1=1#baidusnap2">地址</a></span>  <span style="margin-left:5px">以下是该网页在北京时间 2017年06月01日 01:49:29 的快照；</span>
        <p>如果打开速度慢，可以尝试<a href="http://cache.baiducontent.com/c?m=9d78d513d9931eed4fece47e0714c0666843f0642ba1da0209d0843896701c011969b9fd61600705a0d861375ff21c4bea876733615f37b7ec94df0cc0e5c97b72d170752740854518ce4aef8d1d749f778d0cbee94abce4b12f94acd9d2dd5e52cc&amp;p=99708f0ecd904ead17bd9b7e0e108b&amp;newp=882a9546d0815bbc0c81c7710f4a8e231610db2151d7d21f6b82c825d7331b001c3bbfb423241000d2c479650aa94957eff33d70310123a3dda5c91d9fb4c57479ca3d272470&amp;user=baidu&amp;fm=sc&amp;query=bmp280+%B5%D8%D6%B7&amp;qid=beae9b3700002c97&amp;p1=1&amp;fast=y">快速版</a>；如果想更新或删除快照，可以<a href="http://tousu.baidu.com/webmaster/add?link=http%3A%2F%2Fcache.baiducontent.com%2Fc%3Fm%3D9d78d513d9931eed4fece47e0714c0666843f0642ba1da0209d0843896701c011969b9fd61600705a0d861375ff21c4bea876733615f37b7ec94df0cc0e5c97b72d170752740854518ce4aef8d1d749f778d0cbee94abce4b12f94acd9d2dd5e52cc%26p%3D99708f0ecd904ead17bd9b7e0e108b%26newp%3D882a9546d0815bbc0c81c7710f4a8e231610db2151d7d21f6b82c825d7331b001c3bbfb423241000d2c479650aa94957eff33d70310123a3dda5c91d9fb4c57479ca3d272470%26user%3Dbaidu%26fm%3Dsc%26query%3Dbmp280%2B%25B5%25D8%25D6%25B7%26qid%3Dbeae9b3700002c97%26p1%3D1" id="bd_tousu">投诉快照</a>。
        </p>
    </div>
<script>document.getElementById("bd_tousu").href = "http://tousu.baidu.com/webmaster/add?link=" + encodeURIComponent(document.location);</script>
    <div id="bd_snap_note">百度和网页 <a href="http://blog.csdn.net/liaokesen168/article/details/50930834">http://blog.csdn.net/liaokesen168/article/details/50930834</a> 的作者无关，不对其内容负责。百度快照谨为网络故障时之索引，不代表被搜索网站的即时页面。</div>
</div>
<div id="bd_snap_search">
	<form action="http://www.baidu.com/s"><input name="cl" value="3" type="hidden"><input name="wd" id="bd_snap_kw" maxlength="100"><span id="bd_snap_btn_wr"><input id="bd_snap_su" value="百度一下" class="bd_snap_btn" onmouseover="this.className='bd_snap_btn bd_snap_btn_h'" onmousedown="this.className='bd_snap_btn btnhover'" onmouseup="this.className='bd_snap_btn'" onmouseout="this.className='bd_snap_btn'" type="submit"></span></form>
</div>
<div id="bd_snap_ln"></div>
<div style="position:relative">


     
    
    
  

            <link rel="canonical" href="http://blog.csdn.net/liaokesen168/article/details/50930834"> 
 <meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" media="handheld" href="#">
       
    <title>STM32通过I2C与BMP280通信 - liaokesen168的博客
        - 博客频道 - CSDN.NET</title>
    <meta http-equiv="Content-Type" content="text/html; charset=gbk">
    <meta name="description" content="BMP280气压传感器（Digital Pressure sensor）测试流程图：项目中使用的是I2C通信，BMP280的作为slave的地址要确认好，它的地址根据硬件电路SDO接什么脚来决定：1.BMP280的测试启动流程（注意它的datasheet中的status寄存器）：（1）读取BMP280的id,其值等于0x58。（2）把">
   
    

    
        <!--new top-->
       
        <link rel="stylesheet" href="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/index.css">
        <!--new top-->
    
      <!-- ad begin -->
         
    <!-- ad end-->

    <link rel="Stylesheet" type="text/css" href="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/style.css">

    

    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blog.csdn.net/liaokesen168/rss/list">
    <link rel="shortcut icon" href="http://c.csdnimg.cn/public/favicon.ico">
    <link type="text/css" rel="stylesheet" href="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/default.css">
 

     
         <link rel="stylesheet" href="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/csdn_blog_detail.css">

     
         






       



    <!-- 广告位开始 -->
        
    <!-- 广告位结束 -->

    
   
      <!--new top-->
    
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/liaokesen168">liaokesen168的博客</a></h2>
            <h3></h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
        
     
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>           
                <li id="btnContents"><a href="http://blog.csdn.net/liaokesen168?viewmode=contents"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_mulu'])">
                    <img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/liaokesen168?viewmode=list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_zhaiyao'])">
                    <img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/liaokesen168/rss/list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_RSS'])">
                    <img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/ico_rss.gif">订阅</span></a></li>                
            

            </ul>
    </div>
</div>


        <div id="body">
            <div id="main">
                <div class="main">
                        <div class="ad_class">
<div class="notice tracking-ad" data-mod="popu_3"> 


<a href="http://blog.csdn.net/blogdevteam/article/details/71710010">
<font color="blue"><strong>【活动】2017 CSDN博客专栏评选</strong></font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/turingbooks/article/details/72416875">
<font color="red"><strong>【评论送书】5月书讯：流畅的Python </strong></font></a>
&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/72819072">
<font color="blue"><strong>CSDN日报20170531 ――《这个架构能实现吗？》
</strong></font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/72772638">
<font color="red"><strong>CSDN 日报 | 4.19-5.19 上榜作者排行出炉</strong></font></a>


</div>                        </div>
                        



  








  
<div id="article_details" class="details">
    <div class="article_title">   
         <span class="ico ico_type_Original"></span>


    <h1>
        <span class="link_title"><a name="baidusnap0"></a><a href="http://blog.csdn.net/liaokesen168/article/details/50930834">
        STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信            
        </a></span>
    </h1>
</div>

   

        <div class="article_manage clearfix">
        <div class="article_r">
            <span class="link_postdate">2016-03-19 14:49</span>
            <span class="link_view" title="阅读次数">5889人阅读</span>
            <span class="link_comments" title="评论次数"> <a href="#comments" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_pinglun'])">评论</a>(7)</span>
            <span class="link_collect tracking-ad" data-mod="popu_171"> <a href="javascript:void(0);" onclick="javascript:collectArticle('STM32%e9%80%9a%e8%bf%87I2C%e4%b8%8eBMP280%e9%80%9a%e4%bf%a1','50930834');return false;" title="收藏">收藏</a></span>
             <span class="link_report"> <a href="#report" onclick="javascript:report(50930834,2);return false;" title="举报">举报</a></span>

        </div>
    </div>
    <div class="embody" style="display:none" id="embody">
        <span class="embody_t">本文章已收录于：</span>
        <div class="embody_c" id="lib" value="{&quot;err&quot;:0,&quot;msg&quot;:&quot;ok&quot;,&quot;data&quot;:[]}"></div>
    </div>
    <style type="text/css">        
            .embody{
                padding:10px 10px 10px;
                margin:0 -20px;
                border-bottom:solid 1px #ededed;                
            }
            .embody_b{
                margin:0 ;
                padding:10px 0;
            }
            .embody .embody_t,.embody .embody_c{
                display: inline-block;
                margin-right:10px;
            }
            .embody_t{
                font-size: 12px;
                color:#999;
            }
            .embody_c{
                font-size: 12px;
            }
            .embody_c img,.embody_c em{
                display: inline-block;
                vertical-align: middle;               
            }
             .embody_c img{               
                width:30px;
                height:30px;
            }
            .embody_c em{
                margin: 0 20px 0 10px;
                color:#333;
                font-style: normal;
            }
    </style>
    
      <div class="category clearfix">
        <div class="category_l">
           <img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/category_icon.jpg">
            <span>分类：</span>
        </div>
        <div class="category_r">
                    <label onclick="GetCategoryArticles('6104018','liaokesen168','top','50930834');">
                        <span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_fenlei']);">STM32<em>（5）</em></span>
                      <img class="arrow-down" src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/arrow_triangle%2520_down.jpg" style="display:inline;">
                      <img class="arrow-up" src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/arrow_triangle_up.jpg" style="display:none;">
                        <div class="subItem">
                            <div class="subItem_t"><a href="http://blog.csdn.net/liaokesen168/article/category/6104018" target="_blank">作者同类文章</a><i class="J_close">X</i></div>
                            <ul class="subItem_l" id="top_6104018">                            
                            </ul>
                        </div>
                    </label>                    
        </div>
    </div>
        <div class="bog_copyright">         
            <p class="copyright_p">版权声明：本文为博主原创文章，未经博主允许不得转载。</p>
        </div>

  

  
  
     


<div id="article_content" class="article_content tracking-ad" data-mod="popu_307" data-dsm="post">

<div align="center"><b style="color:black;background-color:#ffff66">BMP280</b>气压传感器（Digital Pressure sensor）<br>
<div align="left"><br>
</div>
<img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/20160319142350826.png" alt=""><br>
<br>
<div align="left">测试流程图：<br>
<br>
</div>
<img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/20160319142546199.png" alt=""><br>
<br>
<div align="left"><br>
项目中使用的是I2C通信，<b style="color:black;background-color:#ffff66">BMP280</b>的作为slave的<a name="baidusnap2"></a><b style="color:black;background-color:#99ff99">地址</b>要确认好，它的<b style="color:black;background-color:#99ff99">地址</b>根据硬件电路SDO接什么脚来决定：<br>
<img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/20160319143039222.png" alt=""><br>
<br>
1.<b style="color:black;background-color:#ffff66">BMP280</b>的测试启动流程（注意它的datasheet中的<span style="color:#FF0000">status</span>寄存器）：<br>
（1）读取<b style="color:black;background-color:#ffff66">BMP280</b>的id,其值等于0x58。<br>
（2）把补偿寄存器的值都读出来。<br>
（3）对<b style="color:black;background-color:#ffff66">BMP280</b>进行reset。<br>
（4）对<b style="color:black;background-color:#ffff66">BMP280</b>的数据采集精度，模式。。。等进行配置。<br>
（5）给点延时，等待数据采集完毕放入寄存器中。<br>
（6）读取寄存器中的采集数据。<br>
注意：<b style="color:black;background-color:#ffff66">BMP280</b>对温度和气压的测量是通过一堆补偿数据然后根据自己的算法算出来的，要注意这些数据是什么类型的，刚开始我就因为粗心没看清楚，算出来的数据总是不正确。<br>
<img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/20160319144306424.png" alt=""><br>
<br>
下面把代码贴出来：<br>
1.<b style="color:black;background-color:#ffff66">bmp280</b>的驱动文件：<br>
<pre code_snippet_id="1616071" snippet_file_name="blog_20160319_1_8308550" name="code" class="objc">#include &lt;stdlib.h&gt;
#include "stm32f4xx_hal.h"
#include "stm32f4xx_hal_i2c.h"
#include &lt;sensors/<b style="color:black;background-color:#ffff66">bmp280</b>.h&gt;

#define dig_T1 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;T1
#define dig_T2 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;T2
#define dig_T3 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;T3
#define dig_P1 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P1
#define dig_P2 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P2
#define dig_P3 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P3
#define dig_P4 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P4
#define dig_P5 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P5
#define dig_P6 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P6
#define dig_P7 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P7
#define dig_P8 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P8
#define dig_P9 <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;P9

static uint8_t <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2C_HandleTypeDef <b style="color:black;background-color:#ffff66">Bmp280</b>_I2cHandle, uint8_t reg_addr)
{
&nbsp;&nbsp; &nbsp;uint8_t reg_data;

&nbsp;&nbsp; &nbsp;while(HAL_I2C_Master_Transmit(&amp;<b style="color:black;background-color:#ffff66">Bmp280</b>_I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_ADDRESS, &amp;reg_addr, 1, 10000) != HAL_OK) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(HAL_I2C_GetError(&amp;<b style="color:black;background-color:#ffff66">Bmp280</b>_I2cHandle) != HAL_I2C_ERROR_AF) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("Transmit slave address error!!!\r\n");
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return -1;
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}
&nbsp;&nbsp; &nbsp;}

&nbsp;&nbsp; &nbsp;while(HAL_I2C_Master_Receive(&amp;<b style="color:black;background-color:#ffff66">Bmp280</b>_I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_ADDRESS, &amp;reg_data, 1, 10000) != HAL_OK) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(HAL_I2C_GetError(&amp;<b style="color:black;background-color:#ffff66">Bmp280</b>_I2cHandle) != HAL_I2C_ERROR_AF) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("Receive slave data error!!!\r\n");
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return -1;
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}
&nbsp;&nbsp; &nbsp;}

&nbsp;&nbsp; &nbsp;return reg_data;
}

static void <b style="color:black;background-color:#ffff66">bmp280</b>_write_register(I2C_HandleTypeDef <b style="color:black;background-color:#ffff66">Bmp280</b>_I2cHandle, uint8_t reg_addr, uint8_t reg_data)
{
&nbsp;&nbsp; &nbsp;uint8_t tx_data[2] = {reg_addr, reg_data};

&nbsp;&nbsp; &nbsp;while(HAL_I2C_Master_Transmit(&amp;<b style="color:black;background-color:#ffff66">Bmp280</b>_I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_ADDRESS, tx_data, 2, 10000) != HAL_OK) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(HAL_I2C_GetError(&amp;<b style="color:black;background-color:#ffff66">Bmp280</b>_I2cHandle) != HAL_I2C_ERROR_AF) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("Transmit slave address error!!!\r\n");
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}
&nbsp;&nbsp; &nbsp;}
}

/**
&nbsp;* 在<b style="color:black;background-color:#ffff66">bmp280</b>_init()函数里默认初始化t_standby为0.5ms，
&nbsp;* 温度和气压的采样精度设为最低，
&nbsp;* 滤波器系数设为最低，
&nbsp;* 并且进入sleep mode。
&nbsp;*/
struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>_init(I2C_HandleTypeDef I2cHandle)
{
&nbsp;&nbsp; &nbsp;uint8_t <b style="color:black;background-color:#ffff66">bmp280</b>_id;
&nbsp;&nbsp; &nbsp;uint8_t lsb, msb;
&nbsp;&nbsp; &nbsp;uint8_t ctrlmeas_reg, config_reg;
&nbsp;&nbsp; &nbsp;struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_id = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_CHIPID_REG);
&nbsp;&nbsp; &nbsp;if(<b style="color:black;background-color:#ffff66">bmp280</b>_id == 0x58) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b> = malloc(sizeof(struct <b style="color:black;background-color:#ffff66">bmp280</b>));

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle = I2cHandle;
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;mode = <b style="color:black;background-color:#ffff66">BMP280</b>_SLEEP_MODE;
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_sb = <b style="color:black;background-color:#ffff66">BMP280</b>_T_SB1;
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;p_oversampling = <b style="color:black;background-color:#ffff66">BMP280</b>_P_MODE_1;
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_oversampling = <b style="color:black;background-color:#ffff66">BMP280</b>_T_MODE_1;
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;filter_coefficient = <b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_MODE_1;
&nbsp;&nbsp; &nbsp;} else {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("Read <b style="color:black;background-color:#ffff66">BMP280</b> id error!\r\n");
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return NULL;
&nbsp;&nbsp; &nbsp;}

&nbsp;&nbsp; &nbsp;/* read the temperature calibration parameters */
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T1_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T1_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_T1 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T2_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T2_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_T2 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T3_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T3_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_T3 = msb &lt;&lt; 8 | lsb;

&nbsp;&nbsp; &nbsp;/* read the pressure calibration parameters */
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P1_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P1_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P1 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P2_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P2_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P2 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P3_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P3_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P3 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P4_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P4_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P4 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P5_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P5_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P5 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P6_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P6_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P6 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P7_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P7_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P7 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P8_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P8_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P8 = msb &lt;&lt; 8 | lsb;
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P9_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P9_MSB_REG);
&nbsp;&nbsp; &nbsp;dig_P9 = msb &lt;&lt; 8 | lsb;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_reset(<b style="color:black;background-color:#ffff66">bmp280</b>);

&nbsp;&nbsp; &nbsp;ctrlmeas_reg = <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_oversampling &lt;&lt; 5 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;p_oversampling &lt;&lt; 2 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;mode;
&nbsp;&nbsp; &nbsp;config_reg = <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_sb &lt;&lt; 5 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;filter_coefficient &lt;&lt; 2;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_CTRLMEAS_REG, ctrlmeas_reg);
&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_CONFIG_REG, config_reg);

&nbsp;&nbsp; &nbsp;HAL_Delay(100);

&nbsp;&nbsp; &nbsp;return <b style="color:black;background-color:#ffff66">bmp280</b>;
}

void <b style="color:black;background-color:#ffff66">bmp280</b>_reset(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>)
{
&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_RESET_REG, <b style="color:black;background-color:#ffff66">BMP280</b>_RESET_VALUE);
}

void <b style="color:black;background-color:#ffff66">bmp280</b>_set_standby_time(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_T_SB t_standby)
{
&nbsp;&nbsp; &nbsp;uint8_t config_reg;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_sb = t_standby;
&nbsp;&nbsp; &nbsp;config_reg = <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_sb &lt;&lt; 5 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;filter_coefficient &lt;&lt; 2;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_CONFIG_REG, config_reg);
}

void <b style="color:black;background-color:#ffff66">bmp280</b>_set_work_mode(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_WORK_MODE mode)
{
&nbsp;&nbsp; &nbsp;uint8_t ctrlmeas_reg;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;mode = mode;
&nbsp;&nbsp; &nbsp;ctrlmeas_reg = <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_oversampling &lt;&lt; 5 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;p_oversampling &lt;&lt; 2 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;mode;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_CTRLMEAS_REG, ctrlmeas_reg);
}

void <b style="color:black;background-color:#ffff66">bmp280</b>_set_temperature_oversampling_mode(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_T_OVERSAMPLING t_osl)
{
&nbsp;&nbsp; &nbsp;uint8_t ctrlmeas_reg;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_oversampling = t_osl;
&nbsp;&nbsp; &nbsp;ctrlmeas_reg = <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_oversampling &lt;&lt; 5 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;p_oversampling &lt;&lt; 2 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;mode;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_CTRLMEAS_REG, ctrlmeas_reg);
}

void <b style="color:black;background-color:#ffff66">bmp280</b>_set_pressure_oversampling_mode(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_P_OVERSAMPLING p_osl)
{
&nbsp;&nbsp; &nbsp;uint8_t ctrlmeas_reg;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_oversampling = p_osl;
&nbsp;&nbsp; &nbsp;ctrlmeas_reg = <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_oversampling &lt;&lt; 5 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;p_oversampling &lt;&lt; 2 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;mode;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_CTRLMEAS_REG, ctrlmeas_reg);
}

void <b style="color:black;background-color:#ffff66">bmp280</b>_set_filter_mode(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_COEFFICIENT f_coefficient)
{
&nbsp;&nbsp; &nbsp;uint8_t config_reg;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;filter_coefficient = f_coefficient;
&nbsp;&nbsp; &nbsp;config_reg = <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_sb &lt;&lt; 5 | <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;filter_coefficient &lt;&lt; 2;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_CONFIG_REG, config_reg);
}

/* Returns temperature in DegC, double precision. Output value of “51.23” equals 51.23 DegC. */
static double <b style="color:black;background-color:#ffff66">bmp280</b>_compensate_temperature_double(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, int32_t adc_T)
{
&nbsp;&nbsp; &nbsp;double var1, var2, temperature;

&nbsp;&nbsp; &nbsp;var1 = (((double) adc_T) / 16384.0 - ((double) dig_T1) / 1024.0)
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* ((double) dig_T2);
&nbsp;&nbsp; &nbsp;var2 = ((((double) adc_T) / 131072.0 - ((double) dig_T1) / 8192.0)
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* (((double) adc_T) / 131072.0 - ((double) dig_T1) / 8192.0))
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;* ((double) dig_T3);
&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_fine = (int32_t) (var1 + var2);
&nbsp;&nbsp; &nbsp;temperature = (var1 + var2) / 5120.0;

&nbsp;&nbsp; &nbsp;return temperature;
}


/* Returns pressure in Pa as double. Output value of “96386.2” equals 96386.2 Pa = 963.862 hPa */
static double <b style="color:black;background-color:#ffff66">bmp280</b>_compensate_pressure_double(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, int32_t adc_P)
{
&nbsp;&nbsp; &nbsp;double var1, var2, pressure;

&nbsp;&nbsp; &nbsp;var1 = ((double) <b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_fine / 2.0) - 64000.0;
&nbsp;&nbsp; &nbsp;var2 = var1 * var1 * ((double) dig_P6) / 32768.0;
&nbsp;&nbsp; &nbsp;var2 = var2 + var1 * ((double) dig_P5) * 2.0;
&nbsp;&nbsp; &nbsp;var2 = (var2 / 4.0) + (((double) dig_P4) * 65536.0);
&nbsp;&nbsp; &nbsp;var1 = (((double) dig_P3) * var1 * var1 / 524288.0
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;+ ((double) dig_P2) * var1) / 524288.0;
&nbsp;&nbsp; &nbsp;var1 = (1.0 + var1 / 32768.0) * ((double) dig_P1);

&nbsp;&nbsp; &nbsp;if (var1 == 0.0) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return 0; // avoid exception caused by division by zero
&nbsp;&nbsp; &nbsp;}

&nbsp;&nbsp; &nbsp;pressure = 1048576.0 - (double) adc_P;
&nbsp;&nbsp; &nbsp;pressure = (pressure - (var2 / 4096.0)) * 6250.0 / var1;
&nbsp;&nbsp; &nbsp;var1 = ((double) dig_P9) * pressure * pressure / 2147483648.0;
&nbsp;&nbsp; &nbsp;var2 = pressure * ((double) dig_P8) / 32768.0;
&nbsp;&nbsp; &nbsp;pressure = pressure + (var1 + var2 + ((double) dig_P7)) / 16.0;

&nbsp;&nbsp; &nbsp;return pressure;
}

#if 0
static int32_t <b style="color:black;background-color:#ffff66">bmp280</b>_compensate_temperature_int32(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, int32_t adc_T)
{
&nbsp;&nbsp; &nbsp;int32_t var1, var2, temperature;

&nbsp;&nbsp; &nbsp;var1 = ((((adc_T&gt;&gt;3) - ((int32_t)dig_T1&lt;&lt;1))) * ((int32_t)dig_T2)) &gt;&gt; 11;
&nbsp;&nbsp; &nbsp;var2 = (((((adc_T&gt;&gt;4) - ((int32_t)dig_T1)) * ((adc_T&gt;&gt;4) - ((int32_t)dig_T1))) &gt;&gt; 12) * ((int32_t)dig_T3)) &gt;&gt; 14;
&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_fine = var1 + var2;
&nbsp;&nbsp; &nbsp;temperature = (<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_fine * 5 + 128) &gt;&gt; 8;

&nbsp;&nbsp; &nbsp;return temperature;
}

static uint32_t <b style="color:black;background-color:#ffff66">bmp280</b>_compensate_pressure_int64(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, int32_t adc_P)
{
&nbsp;&nbsp; &nbsp;int64_t var1, var2, pressure;

&nbsp;&nbsp; &nbsp;var1 = ((int64_t)<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;t_fine) - 128000;
&nbsp;&nbsp; &nbsp;var2 = var1 * var1 * (int64_t)dig_P6;
&nbsp;&nbsp; &nbsp;var2 = var2 + ((var1*(int64_t)dig_P5)&lt;&lt;17);
&nbsp;&nbsp; &nbsp;var2 = var2 + (((int64_t)dig_P4)&lt;&lt;35);
&nbsp;&nbsp; &nbsp;var1 = ((var1 * var1 * (int64_t)dig_P3)&gt;&gt;8) + ((var1 * (int64_t)dig_P2)&lt;&lt;12);
&nbsp;&nbsp; &nbsp;var1 = (((((int64_t)1)&lt;&lt;47)+var1))*((int64_t)dig_P1)&gt;&gt;33;
&nbsp;&nbsp; &nbsp;if (var1 == 0)
&nbsp;&nbsp; &nbsp;{
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return 0; // avoid exception caused by division by zero
&nbsp;&nbsp; &nbsp;}

&nbsp;&nbsp; &nbsp;pressure = 1048576-adc_P;
&nbsp;&nbsp; &nbsp;pressure = (((pressure&lt;&lt;31)-var2)*3125)/var1;
&nbsp;&nbsp; &nbsp;var1 = (((int64_t)dig_P9) * (pressure&gt;&gt;13) * (pressure&gt;&gt;13)) &gt;&gt; 25;
&nbsp;&nbsp; &nbsp;var2 = (((int64_t)dig_P8) * pressure) &gt;&gt; 19;
&nbsp;&nbsp; &nbsp;pressure = ((pressure + var1 + var2) &gt;&gt; 8) + (((int64_t)dig_P7)&lt;&lt;4);

&nbsp;&nbsp; &nbsp;return (uint32_t)pressure;
}
#endif

/* Returns temperature in DegC, double precision. Output value of “51.23” equals 51.23 DegC. */
double <b style="color:black;background-color:#ffff66">bmp280</b>_get_temperature(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>)
{
&nbsp;&nbsp; &nbsp;uint8_t lsb, msb, xlsb;
&nbsp;&nbsp; &nbsp;int32_t adc_T;
&nbsp;&nbsp; &nbsp;double temperature;

&nbsp;&nbsp; &nbsp;xlsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_TEMPERATURE_XLSB_REG);
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_TEMPERATURE_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_TEMPERATURE_MSB_REG);

&nbsp;&nbsp; &nbsp;adc_T = (msb &lt;&lt; 12) | (lsb &lt;&lt; 4) | (xlsb &gt;&gt; 4);
&nbsp;&nbsp; &nbsp;temperature = <b style="color:black;background-color:#ffff66">bmp280</b>_compensate_temperature_double(<b style="color:black;background-color:#ffff66">bmp280</b>, adc_T);

&nbsp;&nbsp; &nbsp;return temperature;
}

/* Returns pressure in Pa as double. Output value of “96386.2” equals 96386.2 Pa = 963.862 hPa */
double <b style="color:black;background-color:#ffff66">bmp280</b>_get_pressure(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>)
{
&nbsp;&nbsp; &nbsp;uint8_t lsb, msb, xlsb;
&nbsp;&nbsp; &nbsp;int32_t adc_P;
&nbsp;&nbsp; &nbsp;double pressure;


&nbsp;&nbsp; &nbsp;xlsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_PRESSURE_XLSB_REG);
&nbsp;&nbsp; &nbsp;lsb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_PRESSURE_LSB_REG);
&nbsp;&nbsp; &nbsp;msb = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(<b style="color:black;background-color:#ffff66">bmp280</b>-&gt;I2cHandle, <b style="color:black;background-color:#ffff66">BMP280</b>_PRESSURE_MSB_REG);

&nbsp;&nbsp; &nbsp;adc_P = (msb &lt;&lt; 12) | (lsb &lt;&lt; 4) | (xlsb &gt;&gt; 4);
&nbsp;&nbsp; &nbsp;pressure = <b style="color:black;background-color:#ffff66">bmp280</b>_compensate_pressure_double(<b style="color:black;background-color:#ffff66">bmp280</b>, adc_P);

&nbsp;&nbsp; &nbsp;return pressure;
}

/**
&nbsp;* 仅在<b style="color:black;background-color:#ffff66">BMP280</b>被设置为normal mode后，
&nbsp;* 可使用该接口直接读取温度和气压。
&nbsp;*/
void <b style="color:black;background-color:#ffff66">bmp280</b>_get_temperature_and_pressure(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, double *temperature, double *pressure)
{
&nbsp;&nbsp; &nbsp;*temperature = <b style="color:black;background-color:#ffff66">bmp280</b>_get_temperature(<b style="color:black;background-color:#ffff66">bmp280</b>);
&nbsp;&nbsp; &nbsp;*pressure = <b style="color:black;background-color:#ffff66">bmp280</b>_get_pressure(<b style="color:black;background-color:#ffff66">bmp280</b>);
}

/**
&nbsp;* 当<b style="color:black;background-color:#ffff66">BMP280</b>被设置为forced mode后，
&nbsp;* 可使用该接口直接读取温度和气压。
&nbsp;*/
void <b style="color:black;background-color:#ffff66">bmp280</b>_forced_mode_get_temperature_and_pressure(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, double *temperature, double *pressure)
{
&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_set_work_mode(<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_FORCED_MODE);

&nbsp;&nbsp; &nbsp;HAL_Delay(100);

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_get_temperature_and_pressure(<b style="color:black;background-color:#ffff66">bmp280</b>, temperature, pressure);
}

/**
&nbsp;* 此demo使用forced mode以1s为周期，
&nbsp;* 对温度和气压进行数据采集并打印。
&nbsp;*/
void <b style="color:black;background-color:#ffff66">bmp280</b>_demo(I2C_HandleTypeDef I2cHandle, double *temperature, double *pressure)
{
&nbsp;&nbsp; &nbsp;struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>;
&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b> = <b style="color:black;background-color:#ffff66">bmp280</b>_init(I2cHandle);

&nbsp;&nbsp; &nbsp;if(<b style="color:black;background-color:#ffff66">bmp280</b> != NULL) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while(1) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_forced_mode_get_temperature_and_pressure(<b style="color:black;background-color:#ffff66">bmp280</b>, temperature, pressure);
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("temperature=%ld&nbsp;&nbsp; pressure=%ld\r\n", (int32_t)*temperature, (uint32_t)*pressure);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;HAL_Delay(1000);
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}
&nbsp;&nbsp; &nbsp;} else
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("create <b style="color:black;background-color:#ffff66">bmp280</b> error!\r\n");
}



</pre><br>
2.头文件：<br>
<pre code_snippet_id="1616071" snippet_file_name="blog_20160325_2_8525940" name="code" class="objc">#ifndef __<b style="color:black;background-color:#ffff66">BMP280</b>_H__
#define __<b style="color:black;background-color:#ffff66">BMP280</b>_H__

#define <b style="color:black;background-color:#ffff66">BMP280</b>_ADDRESS 0xEC

#define <b style="color:black;background-color:#ffff66">BMP280</b>_RESET_VALUE 0xB6

/*calibration parameters */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T1_LSB_REG                0x88
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T1_MSB_REG                0x89
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T2_LSB_REG                0x8A
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T2_MSB_REG                0x8B
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T3_LSB_REG                0x8C
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_T3_MSB_REG                0x8D
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P1_LSB_REG                0x8E
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P1_MSB_REG                0x8F
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P2_LSB_REG                0x90
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P2_MSB_REG                0x91
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P3_LSB_REG                0x92
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P3_MSB_REG                0x93
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P4_LSB_REG                0x94
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P4_MSB_REG                0x95
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P5_LSB_REG                0x96
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P5_MSB_REG                0x97
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P6_LSB_REG                0x98
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P6_MSB_REG                0x99
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P7_LSB_REG                0x9A
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P7_MSB_REG                0x9B
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P8_LSB_REG                0x9C
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P8_MSB_REG                0x9D
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P9_LSB_REG                0x9E
#define <b style="color:black;background-color:#ffff66">BMP280</b>_DIG_P9_MSB_REG                0x9F

#define <b style="color:black;background-color:#ffff66">BMP280</b>_CHIPID_REG                    0xD0  /*Chip ID Register */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_RESET_REG                     0xE0  /*Softreset Register */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_STATUS_REG                    0xF3  /*Status Register */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_CTRLMEAS_REG                  0xF4  /*Ctrl Measure Register */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_CONFIG_REG                    0xF5  /*Configuration Register */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_PRESSURE_MSB_REG              0xF7  /*Pressure MSB Register */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_PRESSURE_LSB_REG              0xF8  /*Pressure LSB Register */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_PRESSURE_XLSB_REG             0xF9  /*Pressure XLSB Register */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_TEMPERATURE_MSB_REG           0xFA  /*Temperature MSB Reg */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_TEMPERATURE_LSB_REG           0xFB  /*Temperature LSB Reg */
#define <b style="color:black;background-color:#ffff66">BMP280</b>_TEMPERATURE_XLSB_REG          0xFC  /*Temperature XLSB Reg */

/* 在foreced mode下，1s的采样周期，温度和气压使用最低的精度采集并且使用最小的滤波器系数,
 * 数据的采集时间大概在6ms，平均功率为3.27uA。
 * */

/* 在foreced mode下，1s的采样周期, 温度和气压使用最高的精度采集并且使用最大的滤波器系数，
 * 数据的采集时间大概在70ms，平均功率为30uA。
 * */

typedef enum {
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_MODE_SKIP = 0x0,	/*skipped*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_MODE_1,			/*x1*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_MODE_2,			/*x2*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_MODE_3,			/*x4*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_MODE_4,			/*x8*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_MODE_5			    /*x16*/
} <b style="color:black;background-color:#ffff66">BMP280</b>_T_OVERSAMPLING;

typedef enum {
	<b style="color:black;background-color:#ffff66">BMP280</b>_SLEEP_MODE = 0x0,
	<b style="color:black;background-color:#ffff66">BMP280</b>_FORCED_MODE,
	<b style="color:black;background-color:#ffff66">BMP280</b>_NORMAL_MODE
} <b style="color:black;background-color:#ffff66">BMP280</b>_WORK_MODE;

typedef enum {
	<b style="color:black;background-color:#ffff66">BMP280</b>_P_MODE_SKIP = 0x0,	/*skipped*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_P_MODE_1,			/*x1*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_P_MODE_2,			/*x2*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_P_MODE_3,			/*x4*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_P_MODE_4,			/*x8*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_P_MODE_5			    /*x16*/
} <b style="color:black;background-color:#ffff66">BMP280</b>_P_OVERSAMPLING;

typedef enum {
	<b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_OFF = 0x0,	/*filter off*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_MODE_1,		/*0.223*ODR*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_MODE_2,		/*0.092*ODR*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_MODE_3,		/*0.042*ODR*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_MODE_4		/*0.021*ODR*/
} <b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_COEFFICIENT;

typedef enum {
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_SB1 = 0x0,	    /*0.5ms*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_SB2,			/*62.5ms*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_SB3,			/*125ms*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_SB4,			/*250ms*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_SB5,			/*500ms*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_SB6,			/*1000ms*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_SB7,			/*2000ms*/
	<b style="color:black;background-color:#ffff66">BMP280</b>_T_SB8,			/*4000ms*/
} <b style="color:black;background-color:#ffff66">BMP280</b>_T_SB;

struct <b style="color:black;background-color:#ffff66">bmp280</b> {
	I2C_HandleTypeDef I2cHandle;
	/* T1~P9 为补偿系数 */
	uint16_t T1;
	int16_t	T2;
	int16_t	T3;
	uint16_t P1;
	int16_t	P2;
	int16_t	P3;
	int16_t	P4;
	int16_t	P5;
	int16_t	P6;
	int16_t	P7;
	int16_t	P8;
	int16_t	P9;
	int32_t t_fine;
	uint8_t t_sb;
	uint8_t mode;
	uint8_t t_oversampling;
	uint8_t p_oversampling;
	uint8_t	filter_coefficient;
};

extern struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>_init(I2C_HandleTypeDef I2cHandle);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_reset(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_set_standby_time(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_T_SB t_standby);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_set_work_mode(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_WORK_MODE mode);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_set_temperature_oversampling_mode(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_T_OVERSAMPLING t_osl);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_set_pressure_oversampling_mode(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_P_OVERSAMPLING p_osl);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_set_filter_mode(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, <b style="color:black;background-color:#ffff66">BMP280</b>_FILTER_COEFFICIENT f_coefficient);

extern double <b style="color:black;background-color:#ffff66">bmp280</b>_get_temperature(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>);

extern double <b style="color:black;background-color:#ffff66">bmp280</b>_get_pressure(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_get_temperature_and_pressure(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, double *temperature, double *pressure);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_forced_mode_get_temperature_and_pressure(struct <b style="color:black;background-color:#ffff66">bmp280</b> *<b style="color:black;background-color:#ffff66">bmp280</b>, double *temperature, double *pressure);

extern void <b style="color:black;background-color:#ffff66">bmp280</b>_demo(I2C_HandleTypeDef I2cHandle, double *temperature, double *pressure);

#endif
</pre><br>
<br>
<br>
3.主函数相关代码：<br>
<pre code_snippet_id="1616071" snippet_file_name="blog_20160319_2_6847853" name="code" class="objc">    uint8_t <b style="color:black;background-color:#ffff66">bmp280</b>_id = 0;
&nbsp;&nbsp; &nbsp;uint8_t ctr_reg = 0;
&nbsp;&nbsp; &nbsp;uint8_t status_reg = 0;

&nbsp;&nbsp; &nbsp;int32_t tem = 0;
&nbsp;&nbsp; &nbsp;uint32_t pressure = 0;

&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_id = <b style="color:black;background-color:#ffff66">bmp280</b>_init(&amp;I2cHandle);
&nbsp;&nbsp; &nbsp;if(<b style="color:black;background-color:#ffff66">bmp280</b>_id == 0x58) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_reset(&amp;I2cHandle);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ctr_reg = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(&amp;I2cHandle, 0xF4);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("ctr_reg1111===0x%x\r\n", ctr_reg);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(&amp;I2cHandle, 0xF4, 0xFF);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<b style="color:black;background-color:#ffff66">bmp280</b>_write_register(&amp;I2cHandle, 0xF5, 0x14);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;HAL_Delay(100);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while(1) {
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ctr_reg = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(&amp;I2cHandle, 0xF4);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("ctr_reg2222===0x%x\r\n", ctr_reg);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;status_reg = <b style="color:black;background-color:#ffff66">bmp280</b>_read_register(&amp;I2cHandle, 0xF3);
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("status == 0x%x\r\n", status_reg);


&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;tem = <b style="color:black;background-color:#ffff66">bmp280</b>_get_temperature(&amp;I2cHandle);
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;pressure = <b style="color:black;background-color:#ffff66">bmp280</b>_get_pressure(&amp;I2cHandle);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;printf("<b style="color:black;background-color:#ffff66">bmp280</b>_id = 0x%x&nbsp; tem=%ld&nbsp;&nbsp;&nbsp; pressure=%ld&nbsp;&nbsp; \r\n", <b style="color:black;background-color:#ffff66">bmp280</b>_id, tem, pressure/256);

&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;HAL_Delay(2000);
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}
&nbsp;&nbsp; &nbsp;}</pre><br>
<br>
<br>
<br>
</div>
</div>
   
</div>




<!-- Baidu Button BEGIN -->




<div class="bdsharebuttonbox tracking-ad" style="float: right;" data-mod="popu_172">
<a href="#" class="bds_more" data-cmd="more" style="background-position:0 0 !important; background-image: url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=d754dcc0.png) !important"></a>
<a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间" style="background-position:0 -52px !important"></a>
<a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博" style="background-position:0 -104px !important"></a>
<a href="#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博" style="background-position:0 -260px !important"></a>
<a href="#" class="bds_renren" data-cmd="renren" title="分享到人人网" style="background-position:0 -208px !important"></a>
<a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信" style="background-position:0 -1612px !important"></a>
</div>

<!-- Baidu Button END -->

   

    
<!--172.16.140.13-->

<!-- Baidu Button BEGIN -->



<!-- Baidu Button END -->



 


        <div id="digg" articleid="50930834">
            <dl id="btnDigg" class="digg digg_disable" onclick="btndigga();">
               
                 <dt>顶</dt>
                <dd>4</dd>
            </dl>
           
              
            <dl id="btnBury" class="digg digg_disable" onclick="btnburya();">
              
                  <dt>踩</dt>
                <dd>0</dd>               
            </dl>
            
        </div>
     <div class="tracking-ad" data-mod="popu_222"><a href="javascript:void(0);">&nbsp;</a>   </div>
    <div class="tracking-ad" data-mod="popu_223"> <a href="javascript:void(0);">&nbsp;</a></div>
    

   <ul class="article_next_prev">
                <li class="prev_article"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian']);location.href='/liaokesen168/article/details/50909000';">上一篇</span><a href="http://blog.csdn.net/liaokesen168/article/details/50909000" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian'])">STM32F411CE调试I2C遇到的问题</a></li>
                <li class="next_article"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian']);location.href='/liaokesen168/article/details/50973739';">下一篇</span><a href="http://blog.csdn.net/liaokesen168/article/details/50973739" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian'])">unsigned long long的问题</a></li>
    </ul>

    <div style="clear:both; height:10px;"></div>


            <div class="similar_article">
                    <h4></h4>
                    <div class="similar_c" style="margin:20px 0px 0px 0px">
                        <div class="similar_c_t">
                          &nbsp;&nbsp;相关文章推荐
                        </div>
                   
                        <div class="similar_wrap tracking-ad" data-mod="popu_36" style="max-height:195px;">                       
                            <ul class="similar_list fl">    
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/yanghua_kobe/article/details/24096703" title="Apache OFbiz entity engine源码解读" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">Apache OFbiz entity engine源码解读</a>
                                   </li>
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/twsghxs/article/details/39990953" title="我的Java开发学习之旅------&gt;Java经典面试题" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">我的Java开发学习之旅------&gt;Java经典面试题</a>
                                   </li>
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/zhudongya/article/details/7010049" title="recovery" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">recovery</a>
                                   </li>
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/xiaobai20131/article/details/50875994" title="linux下编写I2C驱动与stm32通信（一）" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">linux下编写I2C驱动与stm32通信（一）</a>
                                   </li>
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/qutiezhu/article/details/52373180" title="stm32 i2c通信 [操作寄存器+库函数]" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">stm32 i2c通信 [操作寄存器+库函数]</a>
                                   </li>
                            </ul>
                              <ul class="similar_list fr">      
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/ybhuangfugui/article/details/52250074" title="STM32F10x_硬件I2C主从通信（轮询发送，中断接收）" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">STM32F10x_硬件I2C主从通信（轮询发送，中断接收）</a>
                                   </li>
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/xiaobai20131/article/details/50900409" title="linux下编写I2C驱动与stm32通信（二）" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">linux下编写I2C驱动与stm32通信（二）</a>
                                   </li>
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/minyuanxiani/article/details/21465083" title="stm32 i2c通信 [操作寄存器+库函数]" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">stm32 i2c通信 [操作寄存器+库函数]</a>
                                   </li>
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/minyuanxiani/article/details/21464727" title="stm32 i2c通信 [操作寄存器+库函数]" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">stm32 i2c通信 [操作寄存器+库函数]</a>
                                   </li>
                                   <li>
                                       <em>&#8226;</em>
                                       <a href="http://blog.csdn.net/Lorain_Lynies/article/details/53304510" title="STM32F103C8开发I2C通信（六）" strategy="SearchAlgorithm" target="_blank" style="width: 290px;">STM32F103C8开发I2C通信（六）</a>
                                   </li>
                            </ul>
                        </div>
                    </div>
                </div>   
      
</div>

    <div>
        

        
        

     </div>

<div id="suggest"></div>
           


<style>
.blog-ass-articl dd {
color: #369;
width: 99%; /*修改行*/
float: left;
overflow: hidden;
font: normal normal 12px/23px "SimSun";
height: 23px;
margin: 0;
padding: 0 0 0 10px;
margin-right: 30px;
background: url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;
}
</style>

 

<div id="relate" data-mod="popu_218" class="tracking-ad">
        <div class="relate_t">
            <h3><span>参考知识库</span></h3>
        </div>
        <div class="relate_c">
        </div>
</div>
 

<dl class="blog-ass-articl tracking-ad" id="res-relatived" data-mod="popu_84"> 
    <div class="embody embody_b" id="libkeyparent" style="display:none">
            <span class="embody_t">更多资料请参考：</span>
            <div class="embody_c" id="libkey"></div>
    </div>


     <dt><span>猜你在找</span></dt>    


   

    
    <div id="adCollege"> 
    </div>  

    

      
      
   
</dl>





    <div id="ad_cen">        
                <div>
                              
                              
                    </div>
    </div>  

        <!-- 广告位开始 -->
        <!-- 广告位结束 -->
<div class="tracking-ad" data-view="true" data-mod="ad_popu_72" data-mtp="62" data-order="40" data-con="ad_content_2072">
                 
            <div id="layerd" style="position: fixed;bottom:0px;right:0px;line-height:0px;z-index:1000">
    	            <div class="J_close layer_close" style="display:;background-color:#efefef;padding:0px;color:#333;font:12px/24px Helvetica,Tahoma,Arial,sans-serif;text-align:right;">关闭</div><!-- 广告占位容器 --><div id="cpro_u2895327"></div></div>
            <!-- 投放代码 -->  
     
</div>

<div class="comment_class">
    <div id="comment_title" class="panel_head">
        <span class="see_comment">查看评论</span><a name="comments"></a></div>
    <div id="comment_list">
    </div>
    <div id="comment_bar">
    </div>
    <div id="comment_form">
    </div>
    <div class="announce">
        * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
</div>



    <div id="ad_bot">
    </div>
<div id="report_dialog">
</div>

<div id="d-top" style="bottom:60px;">

        <a id="quick-reply" class="btn btn-top q-reply" title="快速回复" style="display:none;">
            <img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/blog-icon-reply.png" alt="快速回复">
        </a>    
    <a id="d-top-a" class="btn btn-top backtop" style="display: none;" title="返回顶部" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_huidaodingbu'])">         
         <img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/top.png" alt="TOP">
    </a>
</div>

<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>


<div class="tag_list" style="display:none"></div>
   


<div id="pop_win" style="display:none ;position: absolute; z-index: 10000; border: 1px solid rgb(220, 220, 220); top: 222.5px; left: 630px; opacity: 1; background: none 0px 0px repeat scroll rgb(255, 255, 255);">
    
</div>
<div id="popup_mask"></div>
<style>
    #popup_mask
    {
        position: absolute;
        width: 100%;
        height: 100%;
        background: #000;
        z-index: 9999;
        left: 0px;
        top: 0px;
        opacity: 0.3;
        filter: alpha(opacity=30);
        display: none;
    }

</style>













                        <div class="clear">
                        </div>
                    </div>                   
                
            </div>
                   
           <div id="side">
               
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/liaokesen168" target="_blank">
    <img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/1_liaokesen168.jpg" title="访问我的空间" style="max-width:90%">
    </a>
    <br>
    <span><a href="http://my.csdn.net/liaokesen168" class="user_name" target="_blank">liaokesen168</a></span>
</div>
<div class="interact">

    <a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>

 <a href="javascript:void(0);" class="letter" title="[发私信]" onclick="window.open('http://msg.csdn.net/letters/model?receiver=liaokesen168','_blank','height=350,width=700');_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_sixin'])"></a>  
</div>
<div id="blog_medal">
                <div id="bms_box">
               </div>
</div>
<ul id="blog_rank">
    <li>访问：<span>16368次</span></li>
    <li>积分：<span>465</span> </li>    
    <li>等级： <span style="position:relative;display:inline-block;z-index:1">
            <img src="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/blog2.png" alt="" style="vertical-align: middle;" id="leveImg">
            <div id="smallTittle" style=" position: absolute;  left: -24px;  top: 25px;  text-align: center;  width: 101px;  height: 32px;  background-color: #fff;  line-height: 32px;  border: 2px #DDDDDD solid;  box-shadow: 0px 2px 2px rgba (0,0,0,0.1);  display: none;   z-index: 999;">
            <div style="left: 42%;  top: -8px;  position: absolute;  width: 0;  height: 0;  border-left: 10px solid transparent;  border-right: 10px solid transparent;  border-bottom: 8px solid #EAEAEA;"></div>
            积分：465 </div>
        </span>  </li>
    <li>排名：<span>千里之外</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>29篇</span></li>
    <li>转载：<span>8篇</span></li>
    <li>译文：<span>0篇</span></li>
    <li>评论：<span>8条</span></li>
</ul>
</ul>
</div>


<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search csdn-tracking-statistics" target="_blank" data-mod="popu_306">
        <span><input id="inputSearch" class="blogsearch" title="请输入关键字" type="text"></span>
        <input id="btnSubmit" value="搜索" title="search in blog" type="button">
        <input name="q" id="inputQ" type="hidden">
        <input name="t" value="blog" type="hidden">
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div>

<div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">    
                 <li>
                    <a href="http://blog.csdn.net/liaokesen168/article/category/5884043" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">Linux内核驱动</a><span>(23)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/liaokesen168/article/category/6104018" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">STM32</a><span>(6)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/liaokesen168/article/category/6119787" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">BLE(CC2650&amp;CC2640)</a><span>(2)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/liaokesen168/article/category/6150658" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">C语言</a><span>(4)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/liaokesen168/article/category/6262930" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">git</a><span>(3)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/liaokesen168/article/category/6532895" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">linux系统使用</a><span>(1)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/liaokesen168/article/category/6536432" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">Android</a><span>(2)</span>
                </li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list">
<!--归档统计-->
<li><a href="http://blog.csdn.net/liaokesen168/article/month/2017/03">2017年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2017/02">2017年02月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2017/01">2017年01月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/12">2016年12月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/11">2016年11月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/09">2016年09月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/08">2016年08月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/06">2016年06月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/05">2016年05月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/04">2016年04月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/03">2016年03月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2016/02">2016年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2015/11">2015年11月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/liaokesen168/article/month/2015/10">2015年10月</a><span>(6)</span></li>
</div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head">
    <span>       
阅读排行    </span>
</ul>

<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/50930834" title="STM32通过I2C与BMP280通信">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a><span>(5866)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/53317000" title="android应用开机自启动&amp;service开机自启动">android应用开机自启动&amp;service开机自启动</a><span>(1149)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/50807691" title="cc2650之simpleBLEPeripheral工程的打印调试">cc2650之simpleBLEPeripheral工程的打印调试</a><span>(1003)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/50980592" title="stm32的RTC闹钟">stm32的RTC闹钟</a><span>(837)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/51603684" title="git 报错：ERROR: missing Change-Id in commit message footer">git 报错：ERROR: missing Change-Id in commit message footer</a><span>(753)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/50909000" title="STM32F411CE调试I2C遇到的问题">STM32F411CE调试I2C遇到的问题</a><span>(656)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/50722074" title="STM32使用printf">STM32使用printf</a><span>(552)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/49734805" title="core_param的使用">core_param的使用</a><span>(496)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/54090199" title="MIPI LCD调试总结">MIPI LCD调试总结</a><span>(416)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/53267787" title="Linux下查看、修改分区的卷标:修改linux分区的卷标">Linux下查看、修改分区的卷标:修改linux分区的卷标</a><span>(331)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/50930834" title="STM32通过I2C与BMP280通信">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a><span>(7)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/50807691" title="cc2650之simpleBLEPeripheral工程的打印调试">cc2650之simpleBLEPeripheral工程的打印调试</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/49818359" title="show_rle_picture">show_rle_picture</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/49763053" title="__weak修饰符">__weak修饰符</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/49734805" title="core_param的使用">core_param的使用</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/49665025" title="printk()在终端打印红色字体">printk()在终端打印红色字体</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/49335325" title="Linux内核regulator架构和编写">Linux内核regulator架构和编写</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/49310695" title="dump_stack">dump_stack</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/65442977" title="原子操作">原子操作</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/liaokesen168/article/details/49183749" title="seq_file实例">seq_file实例</a><span>(0)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel tracking-ad" data-mod="popu_4">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend">
<ul>
<li><a href="http://blog.csdn.net/turingbooks/article/details/72416875" target="_blank">* 5月书讯：流畅的Python，终于等到你！</a></li>
<li><a href="http://blog.csdn.net/blogdevteam/article/details/72765950" target="_blank">* CSDN日报20170526 ――《论程序员的时代焦虑与焦虑的缓解》 </a></li>
<li><a href="http://blog.csdn.net/jiangwei0910410003/article/details/70483088" target="_blank">* Android中带你开发一款自动爆破签名校验工具kstools</a></li>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/54895665" target="_blank">* Android图片加载框架最全解析――深入探究Glide的缓存机制</a></li>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/72667669" target="_blank">* Android 热修复 Tinker Gradle Plugin解析</a></li>
<li><a href="http://blog.csdn.net/puppet_master/article/details/72455945" target="_blank">* Unity Shader-死亡溶解效果</a></li>

</ul></ul>
</div>


<div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
   
         <a href="http://blog.csdn.net/liaokesen168/article/details/50930834#comments">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/alliews" class="user_name">alliews</a>:
<b style="color:black;background-color:#ffff66">BMP280</b>_Init函数返回的参数没有问题吗？主函数读取变成了ID号，而你返回的参数明显不是呀
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/liaokesen168/article/details/50930834#comments">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/qq_31699195" class="user_name">qq_31699195</a>:
楼主，你的主从设备通信程序能否给一下，我觉得你封装得很好
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/liaokesen168/article/details/50930834#comments">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/zhaoyuan13142" class="user_name">zhaoyuan13142</a>:
您的IIC驱动有HAL封装，搞不明白，我用原子哥的myiic驱动程序，<b style="color:black;background-color:#ffff66">bmp280</b>的寄存器read和...
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/liaokesen168/article/details/50930834#comments">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/liaokesen168" class="user_name">liaokesen168</a>:
@zhaoyuan13142:主从设备通信调试成功了吗？
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/liaokesen168/article/details/50930834#comments">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/zhaoyuan13142" class="user_name">zhaoyuan13142</a>:
向大神求助，我想把程序放到STM32F103上，但是一直调不通，请大神指点指点，感激不尽，qq443...
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/liaokesen168/article/details/50930834#comments">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/liaokesen168" class="user_name">liaokesen168</a>:
@lqb5137:源文件和头文件都更新了一下。
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/liaokesen168/article/details/50807691#comments">cc2650之simpleBLEPeripheral工程的打印调试</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/qq_21230591" class="user_name">qq_21230591</a>:
2650从机的char4 notify可以实现吗，char4的handle是多少？求教。另外，主机这...
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/liaokesen168/article/details/50807691#comments">STM32通过I2C与<b style="color:black;background-color:#ffff66">BMP280</b>通信</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/lqb5137" class="user_name">lqb5137</a>:
没有头文件，能贴出来不？
    </p>
    </li>
</ul>
</div>
    </div>
    <div class="clear">
    </div>


                   <!-- 广告位开始 -->                    <!-- 广告位结束 -->
                   <div class="tracking-ad" data-view="true" data-mtp="63" data-order="40" data-con="ad_content_1260" style="width: 200px; height: 200px;">
                         <div id="nav_show_top_stop" style="width: 200px;height: 200px;z-index:1000"><div id="cpro_u2734128"></div></div>
                   </div>
    
 
                     

           </div>   

            <div class="clear">
            </div>
        </div>

        








    






    </div>
      <!--new top-->
    

      

   
   
     <!--new top-->
   
    <link href="STM32%E9%80%9A%E8%BF%87I2C%E4%B8%8EBMP280%E9%80%9A%E4%BF%A1%20-%20liaokesen168%E7%9A%84%E5%8D%9A%E5%AE%A2%20-%20%E5%8D%9A%E5%AE%A2%E9%A2%91%E9%81%93%20-%20CSDN.NET_files/ask_float_block.css" type="text/css" rel="stylesheet">
    
    
    
    
   

   


        
       
        
          
    

    

     
    


  <div id="a52b5334d" style="width: 1px; height: 1px; display: none;">
                    
                    
   </div>

    
    
      
        
     

    
          
    <div class="pop_CA_cover" style="display:none"></div>
    <div class="pop pop_CA" style="display:none">
          <div class="CA_header">
            收藏助手
            <span class="cancel_icon" id="fapancle" onclick="$('.pop_CA').hide();$('.pop_CA_cover').hide();"></span>
          </div>
          <iframe src="" id="fa" scrolling="no" frameborder="0" height="360" width="100%"></iframe>
    </div>


   
 
</div>



</body></html>